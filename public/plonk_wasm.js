import{startWorkers}from"./snippets/wasm-bindgen-rayon-7afa899f36665473/src/workerHelpers.no-bundler.js";let wasm,cachedTextDecoder=new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0});cachedTextDecoder.decode();let cachegetUint8Memory0=null;function getUint8Memory0(){return null!==cachegetUint8Memory0&&cachegetUint8Memory0.buffer===wasm.memory.buffer||(cachegetUint8Memory0=new Uint8Array(wasm.memory.buffer)),cachegetUint8Memory0}function getStringFromWasm0(a,s){return cachedTextDecoder.decode(getUint8Memory0().slice(a,a+s))}const heap=new Array(32).fill(void 0);heap.push(void 0,null,!0,!1);let heap_next=heap.length;function addHeapObject(a){heap_next===heap.length&&heap.push(heap.length+1);const s=heap_next;return heap_next=heap[s],heap[s]=a,s}function getObject(a){return heap[a]}function dropObject(a){a<36||(heap[a]=heap_next,heap_next=a)}function takeObject(a){const s=getObject(a);return dropObject(a),s}let WASM_VECTOR_LEN=0;function passArray8ToWasm0(a,s){const t=s(1*a.length);return getUint8Memory0().set(a,t/1),WASM_VECTOR_LEN=a.length,t}let cachegetInt32Memory0=null;function getInt32Memory0(){return null!==cachegetInt32Memory0&&cachegetInt32Memory0.buffer===wasm.memory.buffer||(cachegetInt32Memory0=new Int32Array(wasm.memory.buffer)),cachegetInt32Memory0}function getArrayU8FromWasm0(a,s){return getUint8Memory0().subarray(a/1,a/1+s)}let cachegetUint32Memory0=null;function getUint32Memory0(){return null!==cachegetUint32Memory0&&cachegetUint32Memory0.buffer===wasm.memory.buffer||(cachegetUint32Memory0=new Uint32Array(wasm.memory.buffer)),cachegetUint32Memory0}function passArray32ToWasm0(a,s){const t=s(4*a.length);return getUint32Memory0().set(a,t/4),WASM_VECTOR_LEN=a.length,t}function _assertClass(a,s){if(!(a instanceof s))throw new Error(`expected instance of ${s.name}`);return a.ptr}function getArrayU32FromWasm0(a,s){return getUint32Memory0().subarray(a/4,a/4+s)}export function caml_pasta_fp_plonk_proof_create(a,s,t,_,r){_assertClass(a,WasmPastaFpPlonkIndex);var e=passArray8ToWasm0(s,wasm.__wbindgen_malloc),o=WASM_VECTOR_LEN,m=passArray8ToWasm0(t,wasm.__wbindgen_malloc),n=WASM_VECTOR_LEN,p=passArray8ToWasm0(_,wasm.__wbindgen_malloc),i=WASM_VECTOR_LEN,l=passArray32ToWasm0(r,wasm.__wbindgen_malloc),w=WASM_VECTOR_LEN,c=wasm.caml_pasta_fp_plonk_proof_create(a.ptr,e,o,m,n,p,i,l,w);return WasmPastaFpProverProof.__wrap(c)}export function caml_pasta_fp_plonk_proof_verify(a,s,t){var _=passArray32ToWasm0(a,wasm.__wbindgen_malloc),r=WASM_VECTOR_LEN;_assertClass(s,WasmPastaFpPlonkVerifierIndex);var e=s.ptr;s.ptr=0,_assertClass(t,WasmPastaFpProverProof);var o=t.ptr;return t.ptr=0,0!==wasm.caml_pasta_fp_plonk_proof_verify(_,r,e,o)}export function caml_pasta_fp_plonk_proof_batch_verify(a,s,t){_assertClass(a,WasmVecVecVestaPolyComm);var _=a.ptr;a.ptr=0;var r=passArray32ToWasm0(s,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,o=passArray32ToWasm0(t,wasm.__wbindgen_malloc),m=WASM_VECTOR_LEN;return 0!==wasm.caml_pasta_fp_plonk_proof_batch_verify(_,r,e,o,m)}export function caml_pasta_fp_plonk_proof_dummy(){var a=wasm.caml_pasta_fp_plonk_proof_dummy();return WasmPastaFpProverProof.__wrap(a)}export function caml_pasta_fp_plonk_proof_deep_copy(a){_assertClass(a,WasmPastaFpProverProof);var s=a.ptr;a.ptr=0;var t=wasm.caml_pasta_fp_plonk_proof_deep_copy(s);return WasmPastaFpProverProof.__wrap(t)}export function caml_pasta_fq_plonk_proof_create(a,s,t,_,r){_assertClass(a,WasmPastaFqPlonkIndex);var e=passArray8ToWasm0(s,wasm.__wbindgen_malloc),o=WASM_VECTOR_LEN,m=passArray8ToWasm0(t,wasm.__wbindgen_malloc),n=WASM_VECTOR_LEN,p=passArray8ToWasm0(_,wasm.__wbindgen_malloc),i=WASM_VECTOR_LEN,l=passArray32ToWasm0(r,wasm.__wbindgen_malloc),w=WASM_VECTOR_LEN,c=wasm.caml_pasta_fq_plonk_proof_create(a.ptr,e,o,m,n,p,i,l,w);return WasmPastaFqProverProof.__wrap(c)}export function caml_pasta_fq_plonk_proof_verify(a,s,t){var _=passArray32ToWasm0(a,wasm.__wbindgen_malloc),r=WASM_VECTOR_LEN;_assertClass(s,WasmPastaFqPlonkVerifierIndex);var e=s.ptr;s.ptr=0,_assertClass(t,WasmPastaFqProverProof);var o=t.ptr;return t.ptr=0,0!==wasm.caml_pasta_fq_plonk_proof_verify(_,r,e,o)}export function caml_pasta_fq_plonk_proof_batch_verify(a,s,t){_assertClass(a,WasmVecVecPallasPolyComm);var _=a.ptr;a.ptr=0;var r=passArray32ToWasm0(s,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,o=passArray32ToWasm0(t,wasm.__wbindgen_malloc),m=WASM_VECTOR_LEN;return 0!==wasm.caml_pasta_fq_plonk_proof_batch_verify(_,r,e,o,m)}export function caml_pasta_fq_plonk_proof_dummy(){var a=wasm.caml_pasta_fq_plonk_proof_dummy();return WasmPastaFqProverProof.__wrap(a)}export function caml_pasta_fq_plonk_proof_deep_copy(a){_assertClass(a,WasmPastaFqProverProof);var s=a.ptr;a.ptr=0;var t=wasm.caml_pasta_fp_plonk_proof_deep_copy(s);return WasmPastaFqProverProof.__wrap(t)}export function caml_pasta_fp_size_in_bits(){return wasm.caml_pasta_fp_size_in_bits()}export function caml_pasta_fp_size(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.caml_pasta_fp_size(_);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fp_add(a,s){try{const p=wasm.__wbindgen_add_to_stack_pointer(-16);var t=passArray8ToWasm0(a,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,r=passArray8ToWasm0(s,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN;wasm.caml_pasta_fp_add(p,t,_,r,e);var o=getInt32Memory0()[p/4+0],m=getInt32Memory0()[p/4+1],n=getArrayU8FromWasm0(o,m).slice();return wasm.__wbindgen_free(o,1*m),n}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fp_sub(a,s){try{const p=wasm.__wbindgen_add_to_stack_pointer(-16);var t=passArray8ToWasm0(a,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,r=passArray8ToWasm0(s,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN;wasm.caml_pasta_fp_sub(p,t,_,r,e);var o=getInt32Memory0()[p/4+0],m=getInt32Memory0()[p/4+1],n=getArrayU8FromWasm0(o,m).slice();return wasm.__wbindgen_free(o,1*m),n}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fp_negate(a){try{const o=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_pasta_fp_negate(o,s,t);var _=getInt32Memory0()[o/4+0],r=getInt32Memory0()[o/4+1],e=getArrayU8FromWasm0(_,r).slice();return wasm.__wbindgen_free(_,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fp_mul(a,s){try{const p=wasm.__wbindgen_add_to_stack_pointer(-16);var t=passArray8ToWasm0(a,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,r=passArray8ToWasm0(s,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN;wasm.caml_pasta_fp_mul(p,t,_,r,e);var o=getInt32Memory0()[p/4+0],m=getInt32Memory0()[p/4+1],n=getArrayU8FromWasm0(o,m).slice();return wasm.__wbindgen_free(o,1*m),n}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fp_div(a,s){try{const p=wasm.__wbindgen_add_to_stack_pointer(-16);var t=passArray8ToWasm0(a,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,r=passArray8ToWasm0(s,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN;wasm.caml_pasta_fp_div(p,t,_,r,e);var o=getInt32Memory0()[p/4+0],m=getInt32Memory0()[p/4+1],n=getArrayU8FromWasm0(o,m).slice();return wasm.__wbindgen_free(o,1*m),n}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fp_inv(a){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_pasta_fp_inv(e,s,t);var _=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];let o;return 0!==_&&(o=getArrayU8FromWasm0(_,r).slice(),wasm.__wbindgen_free(_,1*r)),o}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fp_square(a){try{const o=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_pasta_fp_square(o,s,t);var _=getInt32Memory0()[o/4+0],r=getInt32Memory0()[o/4+1],e=getArrayU8FromWasm0(_,r).slice();return wasm.__wbindgen_free(_,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fp_is_square(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;return 0!==wasm.caml_pasta_fp_is_square(s,t)}export function caml_pasta_fp_sqrt(a){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_pasta_fp_sqrt(e,s,t);var _=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];let o;return 0!==_&&(o=getArrayU8FromWasm0(_,r).slice(),wasm.__wbindgen_free(_,1*r)),o}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fp_of_int(a){try{const r=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.caml_pasta_fp_of_int(r,a);var s=getInt32Memory0()[r/4+0],t=getInt32Memory0()[r/4+1],_=getArrayU8FromWasm0(s,t).slice();return wasm.__wbindgen_free(s,1*t),_}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fp_to_string(a){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_pasta_fp_to_string(e,s,t);var _=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return getStringFromWasm0(_,r)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(_,r)}}let cachedTextEncoder=new TextEncoder("utf-8");const encodeString=function(a,s){const t=cachedTextEncoder.encode(a);return s.set(t),{read:a.length,written:t.length}};function passStringToWasm0(a,s,t){if(void 0===t){const t=cachedTextEncoder.encode(a),_=s(t.length);return getUint8Memory0().subarray(_,_+t.length).set(t),WASM_VECTOR_LEN=t.length,_}let _=a.length,r=s(_);const e=getUint8Memory0();let o=0;for(;o<_;o++){const s=a.charCodeAt(o);if(s>127)break;e[r+o]=s}if(o!==_){0!==o&&(a=a.slice(o)),r=t(r,_,_=o+3*a.length);const s=getUint8Memory0().subarray(r+o,r+_);o+=encodeString(a,s).written}return WASM_VECTOR_LEN=o,r}export function caml_pasta_fp_of_string(a){try{const o=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passStringToWasm0(a,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),t=WASM_VECTOR_LEN;wasm.caml_pasta_fp_of_string(o,s,t);var _=getInt32Memory0()[o/4+0],r=getInt32Memory0()[o/4+1],e=getArrayU8FromWasm0(_,r).slice();return wasm.__wbindgen_free(_,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fp_print(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_pasta_fp_print(s,t)}export function caml_pasta_fp_compare(a,s){var t=passArray8ToWasm0(a,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,r=passArray8ToWasm0(s,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN;return wasm.caml_pasta_fp_compare(t,_,r,e)}export function caml_pasta_fp_equal(a,s){var t=passArray8ToWasm0(a,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,r=passArray8ToWasm0(s,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN;return 0!==wasm.caml_pasta_fp_equal(t,_,r,e)}export function caml_pasta_fp_random(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.caml_pasta_fp_random(_);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fp_rng(a){try{const r=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.caml_pasta_fp_rng(r,a);var s=getInt32Memory0()[r/4+0],t=getInt32Memory0()[r/4+1],_=getArrayU8FromWasm0(s,t).slice();return wasm.__wbindgen_free(s,1*t),_}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fp_to_bigint(a){try{const o=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_pasta_fp_to_bigint(o,s,t);var _=getInt32Memory0()[o/4+0],r=getInt32Memory0()[o/4+1],e=getArrayU8FromWasm0(_,r).slice();return wasm.__wbindgen_free(_,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fp_of_bigint(a){try{const o=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_pasta_fp_of_bigint(o,s,t);var _=getInt32Memory0()[o/4+0],r=getInt32Memory0()[o/4+1],e=getArrayU8FromWasm0(_,r).slice();return wasm.__wbindgen_free(_,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fp_two_adic_root_of_unity(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.caml_pasta_fp_two_adic_root_of_unity(_);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fp_domain_generator(a){try{const r=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.caml_pasta_fp_domain_generator(r,a);var s=getInt32Memory0()[r/4+0],t=getInt32Memory0()[r/4+1],_=getArrayU8FromWasm0(s,t).slice();return wasm.__wbindgen_free(s,1*t),_}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fp_to_bytes(a){try{const o=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_pasta_fp_to_bytes(o,s,t);var _=getInt32Memory0()[o/4+0],r=getInt32Memory0()[o/4+1],e=getArrayU8FromWasm0(_,r).slice();return wasm.__wbindgen_free(_,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fp_of_bytes(a){try{const o=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_pasta_fp_of_bytes(o,s,t);var _=getInt32Memory0()[o/4+0],r=getInt32Memory0()[o/4+1],e=getArrayU8FromWasm0(_,r).slice();return wasm.__wbindgen_free(_,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fp_deep_copy(a){try{const o=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_pasta_fp_deep_copy(o,s,t);var _=getInt32Memory0()[o/4+0],r=getInt32Memory0()[o/4+1],e=getArrayU8FromWasm0(_,r).slice();return wasm.__wbindgen_free(_,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fq_size_in_bits(){return wasm.caml_pasta_fp_size_in_bits()}export function caml_pasta_fq_size(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.caml_pasta_fq_size(_);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fq_add(a,s){try{const p=wasm.__wbindgen_add_to_stack_pointer(-16);var t=passArray8ToWasm0(a,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,r=passArray8ToWasm0(s,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN;wasm.caml_pasta_fq_add(p,t,_,r,e);var o=getInt32Memory0()[p/4+0],m=getInt32Memory0()[p/4+1],n=getArrayU8FromWasm0(o,m).slice();return wasm.__wbindgen_free(o,1*m),n}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fq_sub(a,s){try{const p=wasm.__wbindgen_add_to_stack_pointer(-16);var t=passArray8ToWasm0(a,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,r=passArray8ToWasm0(s,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN;wasm.caml_pasta_fq_sub(p,t,_,r,e);var o=getInt32Memory0()[p/4+0],m=getInt32Memory0()[p/4+1],n=getArrayU8FromWasm0(o,m).slice();return wasm.__wbindgen_free(o,1*m),n}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fq_negate(a){try{const o=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_pasta_fq_negate(o,s,t);var _=getInt32Memory0()[o/4+0],r=getInt32Memory0()[o/4+1],e=getArrayU8FromWasm0(_,r).slice();return wasm.__wbindgen_free(_,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fq_mul(a,s){try{const p=wasm.__wbindgen_add_to_stack_pointer(-16);var t=passArray8ToWasm0(a,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,r=passArray8ToWasm0(s,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN;wasm.caml_pasta_fq_mul(p,t,_,r,e);var o=getInt32Memory0()[p/4+0],m=getInt32Memory0()[p/4+1],n=getArrayU8FromWasm0(o,m).slice();return wasm.__wbindgen_free(o,1*m),n}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fq_div(a,s){try{const p=wasm.__wbindgen_add_to_stack_pointer(-16);var t=passArray8ToWasm0(a,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,r=passArray8ToWasm0(s,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN;wasm.caml_pasta_fq_div(p,t,_,r,e);var o=getInt32Memory0()[p/4+0],m=getInt32Memory0()[p/4+1],n=getArrayU8FromWasm0(o,m).slice();return wasm.__wbindgen_free(o,1*m),n}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fq_inv(a){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_pasta_fq_inv(e,s,t);var _=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];let o;return 0!==_&&(o=getArrayU8FromWasm0(_,r).slice(),wasm.__wbindgen_free(_,1*r)),o}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fq_square(a){try{const o=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_pasta_fq_square(o,s,t);var _=getInt32Memory0()[o/4+0],r=getInt32Memory0()[o/4+1],e=getArrayU8FromWasm0(_,r).slice();return wasm.__wbindgen_free(_,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fq_is_square(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;return 0!==wasm.caml_pasta_fq_is_square(s,t)}export function caml_pasta_fq_sqrt(a){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_pasta_fq_sqrt(e,s,t);var _=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];let o;return 0!==_&&(o=getArrayU8FromWasm0(_,r).slice(),wasm.__wbindgen_free(_,1*r)),o}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fq_of_int(a){try{const r=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.caml_pasta_fq_of_int(r,a);var s=getInt32Memory0()[r/4+0],t=getInt32Memory0()[r/4+1],_=getArrayU8FromWasm0(s,t).slice();return wasm.__wbindgen_free(s,1*t),_}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fq_to_string(a){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_pasta_fq_to_string(e,s,t);var _=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return getStringFromWasm0(_,r)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(_,r)}}export function caml_pasta_fq_of_string(a){try{const o=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passStringToWasm0(a,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),t=WASM_VECTOR_LEN;wasm.caml_pasta_fq_of_string(o,s,t);var _=getInt32Memory0()[o/4+0],r=getInt32Memory0()[o/4+1],e=getArrayU8FromWasm0(_,r).slice();return wasm.__wbindgen_free(_,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fq_print(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_pasta_fq_print(s,t)}export function caml_pasta_fq_compare(a,s){var t=passArray8ToWasm0(a,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,r=passArray8ToWasm0(s,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN;return wasm.caml_pasta_fq_compare(t,_,r,e)}export function caml_pasta_fq_equal(a,s){var t=passArray8ToWasm0(a,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,r=passArray8ToWasm0(s,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN;return 0!==wasm.caml_pasta_fq_equal(t,_,r,e)}export function caml_pasta_fq_random(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.caml_pasta_fq_random(_);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fq_rng(a){try{const r=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.caml_pasta_fq_rng(r,a);var s=getInt32Memory0()[r/4+0],t=getInt32Memory0()[r/4+1],_=getArrayU8FromWasm0(s,t).slice();return wasm.__wbindgen_free(s,1*t),_}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fq_to_bigint(a){try{const o=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_pasta_fq_to_bigint(o,s,t);var _=getInt32Memory0()[o/4+0],r=getInt32Memory0()[o/4+1],e=getArrayU8FromWasm0(_,r).slice();return wasm.__wbindgen_free(_,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fq_of_bigint(a){try{const o=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_pasta_fq_of_bigint(o,s,t);var _=getInt32Memory0()[o/4+0],r=getInt32Memory0()[o/4+1],e=getArrayU8FromWasm0(_,r).slice();return wasm.__wbindgen_free(_,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fq_two_adic_root_of_unity(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.caml_pasta_fq_two_adic_root_of_unity(_);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fq_domain_generator(a){try{const r=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.caml_pasta_fq_domain_generator(r,a);var s=getInt32Memory0()[r/4+0],t=getInt32Memory0()[r/4+1],_=getArrayU8FromWasm0(s,t).slice();return wasm.__wbindgen_free(s,1*t),_}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fq_to_bytes(a){try{const o=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_pasta_fq_to_bytes(o,s,t);var _=getInt32Memory0()[o/4+0],r=getInt32Memory0()[o/4+1],e=getArrayU8FromWasm0(_,r).slice();return wasm.__wbindgen_free(_,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fq_of_bytes(a){try{const o=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_pasta_fq_of_bytes(o,s,t);var _=getInt32Memory0()[o/4+0],r=getInt32Memory0()[o/4+1],e=getArrayU8FromWasm0(_,r).slice();return wasm.__wbindgen_free(_,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fq_deep_copy(a){try{const o=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_pasta_fq_deep_copy(o,s,t);var _=getInt32Memory0()[o/4+0],r=getInt32Memory0()[o/4+1],e=getArrayU8FromWasm0(_,r).slice();return wasm.__wbindgen_free(_,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_fp_plonk_oracles_create(a,s,t){var _=passArray32ToWasm0(a,wasm.__wbindgen_malloc),r=WASM_VECTOR_LEN;_assertClass(s,WasmPastaFpPlonkVerifierIndex);var e=s.ptr;s.ptr=0,_assertClass(t,WasmPastaFpProverProof);var o=t.ptr;t.ptr=0;var m=wasm.caml_pasta_fp_plonk_oracles_create(_,r,e,o);return WasmPastaFpPlonkOracles.__wrap(m)}export function caml_pasta_fp_plonk_oracles_dummy(){var a=wasm.caml_pasta_fp_plonk_oracles_dummy();return WasmPastaFpPlonkOracles.__wrap(a)}export function caml_pasta_fp_plonk_oracles_deep_copy(a){_assertClass(a,WasmPastaFpPlonkOracles);var s=a.ptr;a.ptr=0;var t=wasm.caml_pasta_fp_plonk_oracles_deep_copy(s);return WasmPastaFpPlonkOracles.__wrap(t)}export function caml_pasta_fq_plonk_oracles_create(a,s,t){var _=passArray32ToWasm0(a,wasm.__wbindgen_malloc),r=WASM_VECTOR_LEN;_assertClass(s,WasmPastaFqPlonkVerifierIndex);var e=s.ptr;s.ptr=0,_assertClass(t,WasmPastaFqProverProof);var o=t.ptr;t.ptr=0;var m=wasm.caml_pasta_fq_plonk_oracles_create(_,r,e,o);return WasmPastaFqPlonkOracles.__wrap(m)}export function caml_pasta_fq_plonk_oracles_dummy(){var a=wasm.caml_pasta_fp_plonk_oracles_dummy();return WasmPastaFqPlonkOracles.__wrap(a)}export function caml_pasta_fq_plonk_oracles_deep_copy(a){_assertClass(a,WasmPastaFqPlonkOracles);var s=a.ptr;a.ptr=0;var t=wasm.caml_pasta_fp_plonk_oracles_deep_copy(s);return WasmPastaFqPlonkOracles.__wrap(t)}function isLikeNone(a){return null==a}export function caml_pasta_fp_plonk_verifier_index_read(a,s,t){_assertClass(s,WasmPastaFpUrs);var _=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),r=WASM_VECTOR_LEN,e=wasm.caml_pasta_fp_plonk_verifier_index_read(!isLikeNone(a),isLikeNone(a)?0:a,s.ptr,_,r);return WasmPastaFpPlonkVerifierIndex.__wrap(e)}export function caml_pasta_fp_plonk_verifier_index_write(a,s,t){_assertClass(s,WasmPastaFpPlonkVerifierIndex);var _=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),r=WASM_VECTOR_LEN;wasm.caml_pasta_fp_plonk_verifier_index_write(isLikeNone(a)?16777215:a?1:0,s.ptr,_,r)}export function caml_pasta_fp_plonk_verifier_index_create(a){_assertClass(a,WasmPastaFpPlonkIndex);var s=wasm.caml_pasta_fp_plonk_verifier_index_create(a.ptr);return WasmPastaFpPlonkVerifierIndex.__wrap(s)}export function caml_pasta_fp_plonk_verifier_index_shifts(a){var s=wasm.caml_pasta_fp_plonk_verifier_index_shifts(a);return WasmPastaFpPlonkVerificationShifts.__wrap(s)}export function caml_pasta_fp_plonk_verifier_index_dummy(){var a=wasm.caml_pasta_fp_plonk_verifier_index_dummy();return WasmPastaFpPlonkVerifierIndex.__wrap(a)}export function caml_pasta_fp_plonk_verifier_index_deep_copy(a){_assertClass(a,WasmPastaFpPlonkVerifierIndex);var s=wasm.caml_pasta_fp_plonk_verifier_index_deep_copy(a.ptr);return WasmPastaFpPlonkVerifierIndex.__wrap(s)}export function caml_pasta_fq_plonk_verifier_index_read(a,s,t){_assertClass(s,WasmPastaFqUrs);var _=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),r=WASM_VECTOR_LEN,e=wasm.caml_pasta_fq_plonk_verifier_index_read(!isLikeNone(a),isLikeNone(a)?0:a,s.ptr,_,r);return WasmPastaFqPlonkVerifierIndex.__wrap(e)}export function caml_pasta_fq_plonk_verifier_index_write(a,s,t){_assertClass(s,WasmPastaFqPlonkVerifierIndex);var _=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),r=WASM_VECTOR_LEN;wasm.caml_pasta_fq_plonk_verifier_index_write(isLikeNone(a)?16777215:a?1:0,s.ptr,_,r)}export function caml_pasta_fq_plonk_verifier_index_create(a){_assertClass(a,WasmPastaFqPlonkIndex);var s=wasm.caml_pasta_fq_plonk_verifier_index_create(a.ptr);return WasmPastaFqPlonkVerifierIndex.__wrap(s)}export function caml_pasta_fq_plonk_verifier_index_shifts(a){var s=wasm.caml_pasta_fq_plonk_verifier_index_shifts(a);return WasmPastaFqPlonkVerificationShifts.__wrap(s)}export function caml_pasta_fq_plonk_verifier_index_dummy(){var a=wasm.caml_pasta_fq_plonk_verifier_index_dummy();return WasmPastaFqPlonkVerifierIndex.__wrap(a)}export function caml_pasta_fq_plonk_verifier_index_deep_copy(a){_assertClass(a,WasmPastaFqPlonkVerifierIndex);var s=wasm.caml_pasta_fq_plonk_verifier_index_deep_copy(a.ptr);return WasmPastaFqPlonkVerifierIndex.__wrap(s)}export function caml_pasta_pallas_one(){var a=wasm.caml_pasta_pallas_one();return WasmPallasGProjective.__wrap(a)}export function caml_pasta_pallas_add(a,s){_assertClass(a,WasmPallasGProjective),_assertClass(s,WasmPallasGProjective);var t=wasm.caml_pasta_pallas_add(a.ptr,s.ptr);return WasmPallasGProjective.__wrap(t)}export function caml_pasta_pallas_sub(a,s){_assertClass(a,WasmPallasGProjective),_assertClass(s,WasmPallasGProjective);var t=wasm.caml_pasta_pallas_sub(a.ptr,s.ptr);return WasmPallasGProjective.__wrap(t)}export function caml_pasta_pallas_negate(a){_assertClass(a,WasmPallasGProjective);var s=wasm.caml_pasta_pallas_negate(a.ptr);return WasmPallasGProjective.__wrap(s)}export function caml_pasta_pallas_double(a){_assertClass(a,WasmPallasGProjective);var s=wasm.caml_pasta_pallas_double(a.ptr);return WasmPallasGProjective.__wrap(s)}export function caml_pasta_pallas_scale(a,s){_assertClass(a,WasmPallasGProjective);var t=passArray8ToWasm0(s,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,r=wasm.caml_pasta_pallas_scale(a.ptr,t,_);return WasmPallasGProjective.__wrap(r)}export function caml_pasta_pallas_random(){var a=wasm.caml_pasta_pallas_random();return WasmPallasGProjective.__wrap(a)}export function caml_pasta_pallas_rng(a){var s=wasm.caml_pasta_pallas_rng(a);return WasmPallasGProjective.__wrap(s)}export function caml_pasta_pallas_endo_base(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.caml_pasta_pallas_endo_base(_);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_pallas_endo_scalar(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.caml_pasta_pallas_endo_scalar(_);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_pallas_to_affine(a){_assertClass(a,WasmPallasGProjective);var s=wasm.caml_pasta_pallas_to_affine(a.ptr);return WasmPallasGAffine.__wrap(s)}export function caml_pasta_pallas_of_affine(a){_assertClass(a,WasmPallasGAffine);var s=wasm.caml_pasta_pallas_of_affine(a.ptr);return WasmPallasGProjective.__wrap(s)}export function caml_pasta_pallas_of_affine_coordinates(a,s){var t=passArray8ToWasm0(a,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,r=passArray8ToWasm0(s,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,o=wasm.caml_pasta_pallas_of_affine_coordinates(t,_,r,e);return WasmPallasGProjective.__wrap(o)}export function caml_pasta_pallas_affine_deep_copy(a){_assertClass(a,WasmPallasGAffine);var s=wasm.caml_pasta_pallas_affine_deep_copy(a.ptr);return WasmPallasGAffine.__wrap(s)}export function caml_pasta_pallas_affine_one(){var a=wasm.caml_pasta_pallas_affine_one();return WasmPallasGAffine.__wrap(a)}export function caml_pasta_vesta_one(){var a=wasm.caml_pasta_vesta_one();return WasmVestaGProjective.__wrap(a)}export function caml_pasta_vesta_add(a,s){_assertClass(a,WasmVestaGProjective),_assertClass(s,WasmVestaGProjective);var t=wasm.caml_pasta_vesta_add(a.ptr,s.ptr);return WasmVestaGProjective.__wrap(t)}export function caml_pasta_vesta_sub(a,s){_assertClass(a,WasmVestaGProjective),_assertClass(s,WasmVestaGProjective);var t=wasm.caml_pasta_vesta_sub(a.ptr,s.ptr);return WasmVestaGProjective.__wrap(t)}export function caml_pasta_vesta_negate(a){_assertClass(a,WasmVestaGProjective);var s=wasm.caml_pasta_vesta_negate(a.ptr);return WasmVestaGProjective.__wrap(s)}export function caml_pasta_vesta_double(a){_assertClass(a,WasmVestaGProjective);var s=wasm.caml_pasta_vesta_double(a.ptr);return WasmVestaGProjective.__wrap(s)}export function caml_pasta_vesta_scale(a,s){_assertClass(a,WasmVestaGProjective);var t=passArray8ToWasm0(s,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,r=wasm.caml_pasta_vesta_scale(a.ptr,t,_);return WasmVestaGProjective.__wrap(r)}export function caml_pasta_vesta_random(){var a=wasm.caml_pasta_vesta_random();return WasmVestaGProjective.__wrap(a)}export function caml_pasta_vesta_rng(a){var s=wasm.caml_pasta_vesta_rng(a);return WasmVestaGProjective.__wrap(s)}export function caml_pasta_vesta_endo_base(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.caml_pasta_vesta_endo_base(_);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_vesta_endo_scalar(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.caml_pasta_vesta_endo_scalar(_);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_pasta_vesta_to_affine(a){_assertClass(a,WasmVestaGProjective);var s=wasm.caml_pasta_vesta_to_affine(a.ptr);return WasmVestaGAffine.__wrap(s)}export function caml_pasta_vesta_of_affine(a){_assertClass(a,WasmVestaGAffine);var s=wasm.caml_pasta_vesta_of_affine(a.ptr);return WasmVestaGProjective.__wrap(s)}export function caml_pasta_vesta_of_affine_coordinates(a,s){var t=passArray8ToWasm0(a,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,r=passArray8ToWasm0(s,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,o=wasm.caml_pasta_vesta_of_affine_coordinates(t,_,r,e);return WasmVestaGProjective.__wrap(o)}export function caml_pasta_vesta_affine_deep_copy(a){_assertClass(a,WasmVestaGAffine);var s=wasm.caml_pasta_pallas_affine_deep_copy(a.ptr);return WasmVestaGAffine.__wrap(s)}export function caml_pasta_vesta_affine_one(){var a=wasm.caml_pasta_vesta_affine_one();return WasmVestaGAffine.__wrap(a)}export function caml_pasta_fp_urs_create(a){var s=wasm.caml_pasta_fp_urs_create(a);return WasmPastaFpUrs.__wrap(s)}export function caml_pasta_fp_urs_write(a,s,t){_assertClass(s,WasmPastaFpUrs);var _=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),r=WASM_VECTOR_LEN;wasm.caml_pasta_fp_urs_write(isLikeNone(a)?16777215:a?1:0,s.ptr,_,r)}export function caml_pasta_fp_urs_read(a,s){var t=passStringToWasm0(s,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),_=WASM_VECTOR_LEN,r=wasm.caml_pasta_fp_urs_read(!isLikeNone(a),isLikeNone(a)?0:a,t,_);return 0===r?void 0:WasmPastaFpUrs.__wrap(r)}export function caml_pasta_fp_urs_lagrange_commitment(a,s,t){_assertClass(a,WasmPastaFpUrs);var _=wasm.caml_pasta_fp_urs_lagrange_commitment(a.ptr,s,t);return WasmPastaVestaPolyComm.__wrap(_)}export function caml_pasta_fp_urs_commit_evaluations(a,s,t){_assertClass(a,WasmPastaFpUrs);var _=passArray8ToWasm0(t,wasm.__wbindgen_malloc),r=WASM_VECTOR_LEN,e=wasm.caml_pasta_fp_urs_commit_evaluations(a.ptr,s,_,r);return WasmPastaVestaPolyComm.__wrap(e)}export function caml_pasta_fp_urs_b_poly_commitment(a,s){_assertClass(a,WasmPastaFpUrs);var t=passArray8ToWasm0(s,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,r=wasm.caml_pasta_fp_urs_b_poly_commitment(a.ptr,t,_);return WasmPastaVestaPolyComm.__wrap(r)}export function caml_pasta_fp_urs_batch_accumulator_check(a,s,t){_assertClass(a,WasmPastaFpUrs);var _=passArray32ToWasm0(s,wasm.__wbindgen_malloc),r=WASM_VECTOR_LEN,e=passArray8ToWasm0(t,wasm.__wbindgen_malloc),o=WASM_VECTOR_LEN;return 0!==wasm.caml_pasta_fp_urs_batch_accumulator_check(a.ptr,_,r,e,o)}export function caml_pasta_fp_urs_h(a){_assertClass(a,WasmPastaFpUrs);var s=wasm.caml_pasta_fp_urs_h(a.ptr);return WasmVestaGAffine.__wrap(s)}export function caml_pasta_fq_urs_create(a){var s=wasm.caml_pasta_fq_urs_create(a);return WasmPastaFqUrs.__wrap(s)}export function caml_pasta_fq_urs_write(a,s,t){_assertClass(s,WasmPastaFqUrs);var _=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),r=WASM_VECTOR_LEN;wasm.caml_pasta_fq_urs_write(isLikeNone(a)?16777215:a?1:0,s.ptr,_,r)}export function caml_pasta_fq_urs_read(a,s){var t=passStringToWasm0(s,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),_=WASM_VECTOR_LEN,r=wasm.caml_pasta_fq_urs_read(!isLikeNone(a),isLikeNone(a)?0:a,t,_);return 0===r?void 0:WasmPastaFqUrs.__wrap(r)}export function caml_pasta_fq_urs_lagrange_commitment(a,s,t){_assertClass(a,WasmPastaFqUrs);var _=wasm.caml_pasta_fq_urs_lagrange_commitment(a.ptr,s,t);return WasmPastaPallasPolyComm.__wrap(_)}export function caml_pasta_fq_urs_commit_evaluations(a,s,t){_assertClass(a,WasmPastaFqUrs);var _=passArray8ToWasm0(t,wasm.__wbindgen_malloc),r=WASM_VECTOR_LEN,e=wasm.caml_pasta_fq_urs_commit_evaluations(a.ptr,s,_,r);return WasmPastaPallasPolyComm.__wrap(e)}export function caml_pasta_fq_urs_b_poly_commitment(a,s){_assertClass(a,WasmPastaFqUrs);var t=passArray8ToWasm0(s,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,r=wasm.caml_pasta_fq_urs_b_poly_commitment(a.ptr,t,_);return WasmPastaPallasPolyComm.__wrap(r)}export function caml_pasta_fq_urs_batch_accumulator_check(a,s,t){_assertClass(a,WasmPastaFqUrs);var _=passArray32ToWasm0(s,wasm.__wbindgen_malloc),r=WASM_VECTOR_LEN,e=passArray8ToWasm0(t,wasm.__wbindgen_malloc),o=WASM_VECTOR_LEN;return 0!==wasm.caml_pasta_fq_urs_batch_accumulator_check(a.ptr,_,r,e,o)}export function caml_pasta_fq_urs_h(a){_assertClass(a,WasmPastaFqUrs);var s=wasm.caml_pasta_fp_urs_h(a.ptr);return WasmPallasGAffine.__wrap(s)}export function caml_pasta_fq_plonk_gate_vector_create(){var a=wasm.caml_pasta_fq_plonk_gate_vector_create();return WasmPastaFqPlonkGateVector.__wrap(a)}export function caml_pasta_fq_plonk_gate_vector_add(a,s){_assertClass(a,WasmPastaFqPlonkGateVector),_assertClass(s,WasmPastaFqPlonkGate);var t=s.ptr;s.ptr=0,wasm.caml_pasta_fq_plonk_gate_vector_add(a.ptr,t)}export function caml_pasta_fq_plonk_gate_vector_get(a,s){_assertClass(a,WasmPastaFqPlonkGateVector);var t=wasm.caml_pasta_fq_plonk_gate_vector_get(a.ptr,s);return WasmPastaFqPlonkGate.__wrap(t)}export function caml_pasta_fq_plonk_gate_vector_wrap(a,s,t){_assertClass(a,WasmPastaFqPlonkGateVector),_assertClass(s,WasmPlonkWire);var _=s.ptr;s.ptr=0,_assertClass(t,WasmPlonkWire);var r=t.ptr;t.ptr=0,wasm.caml_pasta_fq_plonk_gate_vector_wrap(a.ptr,_,r)}export function caml_pasta_fq_plonk_index_create(a,s,t){_assertClass(a,WasmPastaFqPlonkGateVector),_assertClass(t,WasmPastaFqUrs);var _=wasm.caml_pasta_fq_plonk_index_create(a.ptr,s,t.ptr);return WasmPastaFqPlonkIndex.__wrap(_)}export function caml_pasta_fq_plonk_index_max_degree(a){return _assertClass(a,WasmPastaFqPlonkIndex),wasm.caml_pasta_fq_plonk_index_max_degree(a.ptr)}export function caml_pasta_fq_plonk_index_public_inputs(a){return _assertClass(a,WasmPastaFqPlonkIndex),wasm.caml_pasta_fq_plonk_index_public_inputs(a.ptr)}export function caml_pasta_fq_plonk_index_domain_d1_size(a){return _assertClass(a,WasmPastaFqPlonkIndex),wasm.caml_pasta_fq_plonk_index_domain_d1_size(a.ptr)}export function caml_pasta_fq_plonk_index_domain_d4_size(a){return _assertClass(a,WasmPastaFqPlonkIndex),wasm.caml_pasta_fq_plonk_index_domain_d4_size(a.ptr)}export function caml_pasta_fq_plonk_index_domain_d8_size(a){return _assertClass(a,WasmPastaFqPlonkIndex),wasm.caml_pasta_fq_plonk_index_domain_d8_size(a.ptr)}export function caml_pasta_fq_plonk_index_read(a,s,t){_assertClass(s,WasmPastaFqUrs);var _=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),r=WASM_VECTOR_LEN,e=wasm.caml_pasta_fq_plonk_index_read(!isLikeNone(a),isLikeNone(a)?0:a,s.ptr,_,r);return WasmPastaFqPlonkIndex.__wrap(e)}export function caml_pasta_fq_plonk_index_write(a,s,t){_assertClass(s,WasmPastaFqPlonkIndex);var _=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),r=WASM_VECTOR_LEN;wasm.caml_pasta_fq_plonk_index_write(isLikeNone(a)?16777215:a?1:0,s.ptr,_,r)}export function caml_pasta_fp_plonk_gate_vector_create(){var a=wasm.caml_pasta_fp_plonk_gate_vector_create();return WasmPastaFpPlonkGateVector.__wrap(a)}export function caml_pasta_fp_plonk_gate_vector_add(a,s){_assertClass(a,WasmPastaFpPlonkGateVector),_assertClass(s,WasmPastaFpPlonkGate);var t=s.ptr;s.ptr=0,wasm.caml_pasta_fp_plonk_gate_vector_add(a.ptr,t)}export function caml_pasta_fp_plonk_gate_vector_get(a,s){_assertClass(a,WasmPastaFpPlonkGateVector);var t=wasm.caml_pasta_fp_plonk_gate_vector_get(a.ptr,s);return WasmPastaFpPlonkGate.__wrap(t)}export function caml_pasta_fp_plonk_gate_vector_wrap(a,s,t){_assertClass(a,WasmPastaFpPlonkGateVector),_assertClass(s,WasmPlonkWire);var _=s.ptr;s.ptr=0,_assertClass(t,WasmPlonkWire);var r=t.ptr;t.ptr=0,wasm.caml_pasta_fp_plonk_gate_vector_wrap(a.ptr,_,r)}export function caml_pasta_fp_plonk_index_create(a,s,t){_assertClass(a,WasmPastaFpPlonkGateVector),_assertClass(t,WasmPastaFpUrs);var _=wasm.caml_pasta_fp_plonk_index_create(a.ptr,s,t.ptr);return WasmPastaFpPlonkIndex.__wrap(_)}export function caml_pasta_fp_plonk_index_max_degree(a){return _assertClass(a,WasmPastaFpPlonkIndex),wasm.caml_pasta_fp_plonk_index_max_degree(a.ptr)}export function caml_pasta_fp_plonk_index_public_inputs(a){return _assertClass(a,WasmPastaFpPlonkIndex),wasm.caml_pasta_fp_plonk_index_public_inputs(a.ptr)}export function caml_pasta_fp_plonk_index_domain_d1_size(a){return _assertClass(a,WasmPastaFpPlonkIndex),wasm.caml_pasta_fp_plonk_index_domain_d1_size(a.ptr)}export function caml_pasta_fp_plonk_index_domain_d4_size(a){return _assertClass(a,WasmPastaFpPlonkIndex),wasm.caml_pasta_fp_plonk_index_domain_d4_size(a.ptr)}export function caml_pasta_fp_plonk_index_domain_d8_size(a){return _assertClass(a,WasmPastaFpPlonkIndex),wasm.caml_pasta_fp_plonk_index_domain_d8_size(a.ptr)}export function caml_pasta_fp_plonk_index_read(a,s,t){_assertClass(s,WasmPastaFpUrs);var _=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),r=WASM_VECTOR_LEN,e=wasm.caml_pasta_fp_plonk_index_read(!isLikeNone(a),isLikeNone(a)?0:a,s.ptr,_,r);return WasmPastaFpPlonkIndex.__wrap(e)}export function caml_pasta_fp_plonk_index_write(a,s,t){_assertClass(s,WasmPastaFpPlonkIndex);var _=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),r=WASM_VECTOR_LEN;wasm.caml_pasta_fp_plonk_index_write(isLikeNone(a)?16777215:a?1:0,s.ptr,_,r)}export function caml_bigint_256_of_numeral(a,s,t){try{const n=wasm.__wbindgen_add_to_stack_pointer(-16);var _=passStringToWasm0(a,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),r=WASM_VECTOR_LEN;wasm.caml_bigint_256_of_numeral(n,_,r,s,t);var e=getInt32Memory0()[n/4+0],o=getInt32Memory0()[n/4+1],m=getArrayU8FromWasm0(e,o).slice();return wasm.__wbindgen_free(e,1*o),m}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_bigint_256_of_decimal_string(a){try{const o=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passStringToWasm0(a,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),t=WASM_VECTOR_LEN;wasm.caml_bigint_256_of_decimal_string(o,s,t);var _=getInt32Memory0()[o/4+0],r=getInt32Memory0()[o/4+1],e=getArrayU8FromWasm0(_,r).slice();return wasm.__wbindgen_free(_,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_bigint_256_num_limbs(){return wasm.caml_bigint_256_num_limbs()}export function caml_bigint_256_bytes_per_limb(){return wasm.caml_bigint_256_bytes_per_limb()}export function caml_bigint_256_div(a,s){try{const p=wasm.__wbindgen_add_to_stack_pointer(-16);var t=passArray8ToWasm0(a,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,r=passArray8ToWasm0(s,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN;wasm.caml_bigint_256_div(p,t,_,r,e);var o=getInt32Memory0()[p/4+0],m=getInt32Memory0()[p/4+1],n=getArrayU8FromWasm0(o,m).slice();return wasm.__wbindgen_free(o,1*m),n}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_bigint_256_compare(a,s){var t=passArray8ToWasm0(a,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,r=passArray8ToWasm0(s,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN;return wasm.caml_bigint_256_compare(t,_,r,e)}export function caml_bigint_256_print(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_bigint_256_print(s,t)}export function caml_bigint_256_to_string(a){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_bigint_256_to_string(e,s,t);var _=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return getStringFromWasm0(_,r)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(_,r)}}export function caml_bigint_256_test_bit(a,s){var t=passArray8ToWasm0(a,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN;return 0!==wasm.caml_bigint_256_test_bit(t,_,s)}export function caml_bigint_256_to_bytes(a){try{const o=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_bigint_256_to_bytes(o,s,t);var _=getInt32Memory0()[o/4+0],r=getInt32Memory0()[o/4+1],e=getArrayU8FromWasm0(_,r).slice();return wasm.__wbindgen_free(_,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_bigint_256_of_bytes(a){try{const o=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_bigint_256_of_bytes(o,s,t);var _=getInt32Memory0()[o/4+0],r=getInt32Memory0()[o/4+1],e=getArrayU8FromWasm0(_,r).slice();return wasm.__wbindgen_free(_,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function caml_bigint_256_deep_copy(a){try{const o=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.caml_bigint_256_deep_copy(o,s,t);var _=getInt32Memory0()[o/4+0],r=getInt32Memory0()[o/4+1],e=getArrayU8FromWasm0(_,r).slice();return wasm.__wbindgen_free(_,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function greet(a){var s=passStringToWasm0(a,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),t=WASM_VECTOR_LEN;wasm.greet(s,t)}export function console_log(a){var s=passStringToWasm0(a,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),t=WASM_VECTOR_LEN;wasm.console_log(s,t)}export function create_zero_u32_ptr(){return wasm.create_zero_u32_ptr()}export function free_u32_ptr(a){wasm.free_u32_ptr(a)}export function set_u32_ptr(a,s){wasm.set_u32_ptr(a,s)}export function wait_until_non_zero(a){return wasm.wait_until_non_zero(a)>>>0}function handleError(a,s){try{return a.apply(this,s)}catch(a){wasm.__wbindgen_exn_store(addHeapObject(a))}}export function initThreadPool(a){return takeObject(wasm.initThreadPool(a))}export function wbg_rayon_start_worker(a){wasm.wbg_rayon_start_worker(a)}export const WasmPlonkGateType=Object.freeze({Zero:0,0:"Zero",Generic:1,1:"Generic",Poseidon:2,2:"Poseidon",Add1:3,3:"Add1",Add2:4,4:"Add2",Vbmul1:5,5:"Vbmul1",Vbmul2:6,6:"Vbmul2",Vbmul3:7,7:"Vbmul3",Endomul1:8,8:"Endomul1",Endomul2:9,9:"Endomul2",Endomul3:10,10:"Endomul3",Endomul4:11,11:"Endomul4"});export const WasmPlonkCol=Object.freeze({L:0,0:"L",R:1,1:"R",O:2,2:"O"});export class WasmPallasGAffine{static __wrap(a){const s=Object.create(WasmPallasGAffine.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpallasgaffine_free(a)}get x(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.__wbg_get_wasmpallasgaffine_x(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set x(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.__wbg_set_wasmpallasgaffine_x(this.ptr,s,t)}get y(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.__wbg_get_wasmpallasgaffine_y(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set y(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.__wbg_set_wasmpallasgaffine_y(this.ptr,s,t)}get infinity(){return 0!==wasm.__wbg_get_wasmpallasgaffine_infinity(this.ptr)}set infinity(a){wasm.__wbg_set_wasmpallasgaffine_infinity(this.ptr,a)}}export class WasmPallasGProjective{static __wrap(a){const s=Object.create(WasmPallasGProjective.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpallasgprojective_free(a)}}export class WasmPastaFpOpeningProof{static __wrap(a){const s=Object.create(WasmPastaFpOpeningProof.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastafpopeningproof_free(a)}get z1(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.__wbg_get_wasmpastafpopeningproof_z1(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set z1(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.__wbg_set_wasmpastafpopeningproof_z1(this.ptr,s,t)}get z2(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.__wbg_get_wasmpastafpopeningproof_z2(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set z2(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.__wbg_set_wasmpastafpopeningproof_z2(this.ptr,s,t)}constructor(a,s,t,_,r,e){var o=passArray32ToWasm0(a,wasm.__wbindgen_malloc),m=WASM_VECTOR_LEN,n=passArray32ToWasm0(s,wasm.__wbindgen_malloc),p=WASM_VECTOR_LEN;_assertClass(t,WasmVestaGAffine);var i=t.ptr;t.ptr=0;var l=passArray8ToWasm0(_,wasm.__wbindgen_malloc),w=WASM_VECTOR_LEN,c=passArray8ToWasm0(r,wasm.__wbindgen_malloc),f=WASM_VECTOR_LEN;_assertClass(e,WasmVestaGAffine);var g=e.ptr;e.ptr=0;var d=wasm.wasmpastafpopeningproof_new(o,m,n,p,i,l,w,c,f,g);return WasmPastaFpOpeningProof.__wrap(d)}get lr_0(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafpopeningproof_lr_0(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU32FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,4*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}get lr_1(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafpopeningproof_lr_1(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU32FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,4*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}get delta(){var a=wasm.wasmpastafpopeningproof_delta(this.ptr);return WasmVestaGAffine.__wrap(a)}get sg(){var a=wasm.wasmpastafpopeningproof_sg(this.ptr);return WasmVestaGAffine.__wrap(a)}set lr_0(a){var s=passArray32ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafpopeningproof_set_lr_0(this.ptr,s,t)}set lr_1(a){var s=passArray32ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafpopeningproof_set_lr_1(this.ptr,s,t)}set delta(a){_assertClass(a,WasmVestaGAffine);var s=a.ptr;a.ptr=0,wasm.wasmpastafpopeningproof_set_delta(this.ptr,s)}set sg(a){_assertClass(a,WasmVestaGAffine);var s=a.ptr;a.ptr=0,wasm.wasmpastafpopeningproof_set_sg(this.ptr,s)}}export class WasmPastaFpPlonkDomain{static __wrap(a){const s=Object.create(WasmPastaFpPlonkDomain.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastafpplonkdomain_free(a)}get log_size_of_group(){return wasm.__wbg_get_wasmpastafpplonkdomain_log_size_of_group(this.ptr)}set log_size_of_group(a){wasm.__wbg_set_wasmpastafpplonkdomain_log_size_of_group(this.ptr,a)}get group_gen(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.__wbg_get_wasmpastafpplonkdomain_group_gen(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set group_gen(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.__wbg_set_wasmpastafpplonkdomain_group_gen(this.ptr,s,t)}constructor(a,s){var t=passArray8ToWasm0(s,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,r=wasm.wasmpastafpplonkdomain_new(a,t,_);return WasmPastaFpPlonkDomain.__wrap(r)}}export class WasmPastaFpPlonkGate{static __wrap(a){const s=Object.create(WasmPastaFpPlonkGate.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastafpplonkgate_free(a)}get typ(){return wasm.__wbg_get_wasmpastafpplonkgate_typ(this.ptr)>>>0}set typ(a){wasm.__wbg_set_wasmpastafpplonkgate_typ(this.ptr,a)}get wires(){var a=wasm.__wbg_get_wasmpastafpplonkgate_wires(this.ptr);return WasmPlonkWires.__wrap(a)}set wires(a){_assertClass(a,WasmPlonkWires);var s=a.ptr;a.ptr=0,wasm.__wbg_set_wasmpastafpplonkgate_wires(this.ptr,s)}constructor(a,s,t){_assertClass(s,WasmPlonkWires);var _=s.ptr;s.ptr=0;var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,o=wasm.wasmpastafpplonkgate_new(a,_,r,e);return WasmPastaFpPlonkGate.__wrap(o)}get c(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafpplonkgate_c(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set c(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafpplonkgate_set_c(this.ptr,s,t)}}export class WasmPastaFpPlonkGateVector{static __wrap(a){const s=Object.create(WasmPastaFpPlonkGateVector.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastafpplonkgatevector_free(a)}}export class WasmPastaFpPlonkIndex{static __wrap(a){const s=Object.create(WasmPastaFpPlonkIndex.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastafpplonkindex_free(a)}}export class WasmPastaFpPlonkOracles{static __wrap(a){const s=Object.create(WasmPastaFpPlonkOracles.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastafpplonkoracles_free(a)}get o(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.__wbg_get_wasmpastafpplonkoracles_o(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set o(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.__wbg_set_wasmpastafpplonkoracles_o(this.ptr,s,t)}get p_eval0(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.__wbg_get_wasmpastafpplonkoracles_p_eval0(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set p_eval0(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.__wbg_set_wasmpastafpplonkoracles_p_eval0(this.ptr,s,t)}get p_eval1(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.__wbg_get_wasmpastafpplonkoracles_p_eval1(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set p_eval1(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.__wbg_set_wasmpastafpplonkoracles_p_eval1(this.ptr,s,t)}get digest_before_evaluations(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.__wbg_get_wasmpastafpplonkoracles_digest_before_evaluations(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set digest_before_evaluations(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.__wbg_set_wasmpastafpplonkoracles_digest_before_evaluations(this.ptr,s,t)}constructor(a,s,t,_,r){var e=passArray8ToWasm0(a,wasm.__wbindgen_malloc),o=WASM_VECTOR_LEN,m=passArray8ToWasm0(s,wasm.__wbindgen_malloc),n=WASM_VECTOR_LEN,p=passArray8ToWasm0(t,wasm.__wbindgen_malloc),i=WASM_VECTOR_LEN,l=passArray8ToWasm0(_,wasm.__wbindgen_malloc),w=WASM_VECTOR_LEN,c=passArray8ToWasm0(r,wasm.__wbindgen_malloc),f=WASM_VECTOR_LEN,g=wasm.wasmpastafpplonkoracles_new(e,o,m,n,p,i,l,w,c,f);return WasmPastaFpPlonkOracles.__wrap(g)}get opening_prechallenges(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafpplonkoracles_opening_prechallenges(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set opening_prechallenges(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafpplonkoracles_set_opening_prechallenges(this.ptr,s,t)}}export class WasmPastaFpPlonkVerificationEvals{static __wrap(a){const s=Object.create(WasmPastaFpPlonkVerificationEvals.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastafpplonkverificationevals_free(a)}get sigma_comm0(){var a=wasm.wasmpastafpplonkverificationevals_sigma_comm0(this.ptr);return WasmPastaVestaPolyComm.__wrap(a)}get sigma_comm1(){var a=wasm.wasmpastafpplonkverificationevals_sigma_comm1(this.ptr);return WasmPastaVestaPolyComm.__wrap(a)}get sigma_comm2(){var a=wasm.wasmpastafpplonkverificationevals_sigma_comm2(this.ptr);return WasmPastaVestaPolyComm.__wrap(a)}get ql_comm(){var a=wasm.wasmpastafpplonkverificationevals_ql_comm(this.ptr);return WasmPastaVestaPolyComm.__wrap(a)}get qr_comm(){var a=wasm.wasmpastafpplonkverificationevals_qr_comm(this.ptr);return WasmPastaVestaPolyComm.__wrap(a)}get qo_comm(){var a=wasm.wasmpastafpplonkverificationevals_qo_comm(this.ptr);return WasmPastaVestaPolyComm.__wrap(a)}get qm_comm(){var a=wasm.wasmpastafpplonkverificationevals_qm_comm(this.ptr);return WasmPastaVestaPolyComm.__wrap(a)}get qc_comm(){var a=wasm.wasmpastafpplonkverificationevals_qc_comm(this.ptr);return WasmPastaVestaPolyComm.__wrap(a)}get rcm_comm0(){var a=wasm.wasmpastafpplonkverificationevals_rcm_comm0(this.ptr);return WasmPastaVestaPolyComm.__wrap(a)}get rcm_comm1(){var a=wasm.wasmpastafpplonkverificationevals_rcm_comm1(this.ptr);return WasmPastaVestaPolyComm.__wrap(a)}get rcm_comm2(){var a=wasm.wasmpastafpplonkverificationevals_rcm_comm2(this.ptr);return WasmPastaVestaPolyComm.__wrap(a)}get psm_comm(){var a=wasm.wasmpastafpplonkverificationevals_psm_comm(this.ptr);return WasmPastaVestaPolyComm.__wrap(a)}get add_comm(){var a=wasm.wasmpastafpplonkverificationevals_add_comm(this.ptr);return WasmPastaVestaPolyComm.__wrap(a)}get mul1_comm(){var a=wasm.wasmpastafpplonkverificationevals_mul1_comm(this.ptr);return WasmPastaVestaPolyComm.__wrap(a)}get mul2_comm(){var a=wasm.wasmpastafpplonkverificationevals_mul2_comm(this.ptr);return WasmPastaVestaPolyComm.__wrap(a)}get emul1_comm(){var a=wasm.wasmpastafpplonkverificationevals_emul1_comm(this.ptr);return WasmPastaVestaPolyComm.__wrap(a)}get emul2_comm(){var a=wasm.wasmpastafpplonkverificationevals_emul2_comm(this.ptr);return WasmPastaVestaPolyComm.__wrap(a)}get emul3_comm(){var a=wasm.wasmpastafpplonkverificationevals_emul3_comm(this.ptr);return WasmPastaVestaPolyComm.__wrap(a)}set sigma_comm0(a){_assertClass(a,WasmPastaVestaPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_sigma_comm0(this.ptr,s)}set sigma_comm1(a){_assertClass(a,WasmPastaVestaPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_sigma_comm1(this.ptr,s)}set sigma_comm2(a){_assertClass(a,WasmPastaVestaPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_sigma_comm2(this.ptr,s)}set ql_comm(a){_assertClass(a,WasmPastaVestaPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_ql_comm(this.ptr,s)}set qr_comm(a){_assertClass(a,WasmPastaVestaPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_qr_comm(this.ptr,s)}set qo_comm(a){_assertClass(a,WasmPastaVestaPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_qo_comm(this.ptr,s)}set qm_comm(a){_assertClass(a,WasmPastaVestaPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_qm_comm(this.ptr,s)}set qc_comm(a){_assertClass(a,WasmPastaVestaPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_qc_comm(this.ptr,s)}set rcm_comm0(a){_assertClass(a,WasmPastaVestaPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_rcm_comm0(this.ptr,s)}set rcm_comm1(a){_assertClass(a,WasmPastaVestaPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_rcm_comm1(this.ptr,s)}set rcm_comm2(a){_assertClass(a,WasmPastaVestaPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_rcm_comm2(this.ptr,s)}set psm_comm(a){_assertClass(a,WasmPastaVestaPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_psm_comm(this.ptr,s)}set add_comm(a){_assertClass(a,WasmPastaVestaPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_add_comm(this.ptr,s)}set mul1_comm(a){_assertClass(a,WasmPastaVestaPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_mul1_comm(this.ptr,s)}set mul2_comm(a){_assertClass(a,WasmPastaVestaPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_mul2_comm(this.ptr,s)}set emul1_comm(a){_assertClass(a,WasmPastaVestaPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_emul1_comm(this.ptr,s)}set emul2_comm(a){_assertClass(a,WasmPastaVestaPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_emul2_comm(this.ptr,s)}set emul3_comm(a){_assertClass(a,WasmPastaVestaPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_emul3_comm(this.ptr,s)}constructor(a,s,t,_,r,e,o,m,n,p,i,l,w,c,f,g,d,y){_assertClass(a,WasmPastaVestaPolyComm),_assertClass(s,WasmPastaVestaPolyComm),_assertClass(t,WasmPastaVestaPolyComm),_assertClass(_,WasmPastaVestaPolyComm),_assertClass(r,WasmPastaVestaPolyComm),_assertClass(e,WasmPastaVestaPolyComm),_assertClass(o,WasmPastaVestaPolyComm),_assertClass(m,WasmPastaVestaPolyComm),_assertClass(n,WasmPastaVestaPolyComm),_assertClass(p,WasmPastaVestaPolyComm),_assertClass(i,WasmPastaVestaPolyComm),_assertClass(l,WasmPastaVestaPolyComm),_assertClass(w,WasmPastaVestaPolyComm),_assertClass(c,WasmPastaVestaPolyComm),_assertClass(f,WasmPastaVestaPolyComm),_assertClass(g,WasmPastaVestaPolyComm),_assertClass(d,WasmPastaVestaPolyComm),_assertClass(y,WasmPastaVestaPolyComm);var v=wasm.wasmpastafpplonkverificationevals_new(a.ptr,s.ptr,t.ptr,_.ptr,r.ptr,e.ptr,o.ptr,m.ptr,n.ptr,p.ptr,i.ptr,l.ptr,w.ptr,c.ptr,f.ptr,g.ptr,d.ptr,y.ptr);return WasmPastaFpPlonkVerificationEvals.__wrap(v)}}export class WasmPastaFpPlonkVerificationShifts{static __wrap(a){const s=Object.create(WasmPastaFpPlonkVerificationShifts.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastafpplonkverificationshifts_free(a)}get r(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.__wbg_get_wasmpastafpplonkdomain_group_gen(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set r(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.__wbg_set_wasmpastafpplonkdomain_group_gen(this.ptr,s,t)}get o(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.__wbg_get_wasmpastafpplonkverificationshifts_o(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set o(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.__wbg_set_wasmpastafpplonkverificationshifts_o(this.ptr,s,t)}constructor(a,s){var t=passArray8ToWasm0(a,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,r=passArray8ToWasm0(s,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,o=wasm.wasmpastafpplonkverificationshifts_new(t,_,r,e);return WasmPastaFpPlonkVerificationShifts.__wrap(o)}}export class WasmPastaFpPlonkVerifierIndex{static __wrap(a){const s=Object.create(WasmPastaFpPlonkVerifierIndex.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastafpplonkverifierindex_free(a)}get domain(){var a=wasm.__wbg_get_wasmpastafpplonkverifierindex_domain(this.ptr);return WasmPastaFpPlonkDomain.__wrap(a)}set domain(a){_assertClass(a,WasmPastaFpPlonkDomain);var s=a.ptr;a.ptr=0,wasm.__wbg_set_wasmpastafpplonkverifierindex_domain(this.ptr,s)}get max_poly_size(){return wasm.__wbg_get_wasmpastafpplonkverifierindex_max_poly_size(this.ptr)}set max_poly_size(a){wasm.__wbg_set_wasmpastafpplonkverifierindex_max_poly_size(this.ptr,a)}get max_quot_size(){return wasm.__wbg_get_wasmpastafpplonkverifierindex_max_quot_size(this.ptr)}set max_quot_size(a){wasm.__wbg_set_wasmpastafpplonkverifierindex_max_quot_size(this.ptr,a)}get shifts(){var a=wasm.__wbg_get_wasmpastafpplonkverifierindex_shifts(this.ptr);return WasmPastaFpPlonkVerificationShifts.__wrap(a)}set shifts(a){_assertClass(a,WasmPastaFpPlonkVerificationShifts);var s=a.ptr;a.ptr=0,wasm.__wbg_set_wasmpastafpplonkverifierindex_shifts(this.ptr,s)}constructor(a,s,t,_,r,e){_assertClass(a,WasmPastaFpPlonkDomain),_assertClass(_,WasmPastaFpUrs),_assertClass(r,WasmPastaFpPlonkVerificationEvals),_assertClass(e,WasmPastaFpPlonkVerificationShifts);var o=wasm.wasmpastafpplonkverifierindex_new(a.ptr,s,t,_.ptr,r.ptr,e.ptr);return WasmPastaFpPlonkVerifierIndex.__wrap(o)}get urs(){var a=wasm.wasmpastafpplonkverifierindex_urs(this.ptr);return WasmPastaFpUrs.__wrap(a)}set urs(a){_assertClass(a,WasmPastaFpUrs);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverifierindex_set_urs(this.ptr,s)}get evals(){var a=wasm.wasmpastafpplonkverifierindex_evals(this.ptr);return WasmPastaFpPlonkVerificationEvals.__wrap(a)}set evals(a){_assertClass(a,WasmPastaFpPlonkVerificationEvals);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverifierindex_set_evals(this.ptr,s)}}export class WasmPastaFpProofEvaluations{static __wrap(a){const s=Object.create(WasmPastaFpProofEvaluations.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastafpproofevaluations_free(a)}constructor(a,s,t,_,r,e,o,m){var n=passArray8ToWasm0(a,wasm.__wbindgen_malloc),p=WASM_VECTOR_LEN,i=passArray8ToWasm0(s,wasm.__wbindgen_malloc),l=WASM_VECTOR_LEN,w=passArray8ToWasm0(t,wasm.__wbindgen_malloc),c=WASM_VECTOR_LEN,f=passArray8ToWasm0(_,wasm.__wbindgen_malloc),g=WASM_VECTOR_LEN,d=passArray8ToWasm0(r,wasm.__wbindgen_malloc),y=WASM_VECTOR_LEN,v=passArray8ToWasm0(e,wasm.__wbindgen_malloc),W=WASM_VECTOR_LEN,u=passArray8ToWasm0(o,wasm.__wbindgen_malloc),b=WASM_VECTOR_LEN,P=passArray8ToWasm0(m,wasm.__wbindgen_malloc),k=WASM_VECTOR_LEN,C=wasm.wasmpastafpproofevaluations_new(n,p,i,l,w,c,f,g,d,y,v,W,u,b,P,k);return WasmPastaFpProofEvaluations.__wrap(C)}get l(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafpproofevaluations_l(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}get r(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafpproofevaluations_r(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}get o(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafpproofevaluations_o(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}get z(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafpproofevaluations_z(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}get t(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafpproofevaluations_t(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}get f(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafpproofevaluations_f(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}get sigma1(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafpproofevaluations_sigma1(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}get sigma2(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafpproofevaluations_sigma2(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set l(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafpproofevaluations_set_l(this.ptr,s,t)}set r(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafpproofevaluations_set_r(this.ptr,s,t)}set o(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafpproofevaluations_set_o(this.ptr,s,t)}set z(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafpproofevaluations_set_z(this.ptr,s,t)}set t(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafpproofevaluations_set_t(this.ptr,s,t)}set f(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafpproofevaluations_set_f(this.ptr,s,t)}set sigma1(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafpproofevaluations_set_sigma1(this.ptr,s,t)}set sigma2(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafpproofevaluations_set_sigma2(this.ptr,s,t)}}export class WasmPastaFpProverCommitments{static __wrap(a){const s=Object.create(WasmPastaFpProverCommitments.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastafpprovercommitments_free(a)}constructor(a,s,t,_,r){_assertClass(a,WasmPastaVestaPolyComm);var e=a.ptr;a.ptr=0,_assertClass(s,WasmPastaVestaPolyComm);var o=s.ptr;s.ptr=0,_assertClass(t,WasmPastaVestaPolyComm);var m=t.ptr;t.ptr=0,_assertClass(_,WasmPastaVestaPolyComm);var n=_.ptr;_.ptr=0,_assertClass(r,WasmPastaVestaPolyComm);var p=r.ptr;r.ptr=0;var i=wasm.wasmpastafpprovercommitments_new(e,o,m,n,p);return WasmPastaFpProverCommitments.__wrap(i)}get l_comm(){var a=wasm.wasmpastafpprovercommitments_l_comm(this.ptr);return WasmPastaVestaPolyComm.__wrap(a)}get r_comm(){var a=wasm.wasmpastafpprovercommitments_r_comm(this.ptr);return WasmPastaVestaPolyComm.__wrap(a)}get o_comm(){var a=wasm.wasmpastafpprovercommitments_o_comm(this.ptr);return WasmPastaVestaPolyComm.__wrap(a)}get z_comm(){var a=wasm.wasmpastafpprovercommitments_z_comm(this.ptr);return WasmPastaVestaPolyComm.__wrap(a)}get t_comm(){var a=wasm.wasmpastafpprovercommitments_t_comm(this.ptr);return WasmPastaVestaPolyComm.__wrap(a)}set l_comm(a){_assertClass(a,WasmPastaVestaPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpprovercommitments_set_l_comm(this.ptr,s)}set r_comm(a){_assertClass(a,WasmPastaVestaPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpprovercommitments_set_r_comm(this.ptr,s)}set o_comm(a){_assertClass(a,WasmPastaVestaPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpprovercommitments_set_o_comm(this.ptr,s)}set z_comm(a){_assertClass(a,WasmPastaVestaPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpprovercommitments_set_z_comm(this.ptr,s)}set t_comm(a){_assertClass(a,WasmPastaVestaPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpprovercommitments_set_t_comm(this.ptr,s)}}export class WasmPastaFpProverProof{static __wrap(a){const s=Object.create(WasmPastaFpProverProof.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastafpproverproof_free(a)}constructor(a,s,t,_,r,e,o){_assertClass(a,WasmPastaFpProverCommitments);var m=a.ptr;a.ptr=0,_assertClass(s,WasmPastaFpOpeningProof);var n=s.ptr;s.ptr=0,_assertClass(t,WasmPastaFpProofEvaluations);var p=t.ptr;t.ptr=0,_assertClass(_,WasmPastaFpProofEvaluations);var i=_.ptr;_.ptr=0;var l=passArray8ToWasm0(r,wasm.__wbindgen_malloc),w=WASM_VECTOR_LEN;_assertClass(e,WasmVecVecPastaFp);var c=e.ptr;e.ptr=0;var f=passArray32ToWasm0(o,wasm.__wbindgen_malloc),g=WASM_VECTOR_LEN,d=wasm.wasmpastafpproverproof_new(m,n,p,i,l,w,c,f,g);return WasmPastaFpProverProof.__wrap(d)}get commitments(){var a=wasm.wasmpastafpproverproof_commitments(this.ptr);return WasmPastaFpProverCommitments.__wrap(a)}get proof(){var a=wasm.wasmpastafpproverproof_proof(this.ptr);return WasmPastaFpOpeningProof.__wrap(a)}get evals0(){var a=wasm.wasmpastafpproverproof_evals0(this.ptr);return WasmPastaFpProofEvaluations.__wrap(a)}get evals1(){var a=wasm.wasmpastafpproverproof_evals1(this.ptr);return WasmPastaFpProofEvaluations.__wrap(a)}get public_(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafpproverproof_public_(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}get prev_challenges_scalars(){var a=wasm.wasmpastafpproverproof_prev_challenges_scalars(this.ptr);return WasmVecVecPastaFp.__wrap(a)}get prev_challenges_comms(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafpproverproof_prev_challenges_comms(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU32FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,4*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set commitments(a){_assertClass(a,WasmPastaFpProverCommitments);var s=a.ptr;a.ptr=0,wasm.wasmpastafpproverproof_set_commitments(this.ptr,s)}set proof(a){_assertClass(a,WasmPastaFpOpeningProof);var s=a.ptr;a.ptr=0,wasm.wasmpastafpproverproof_set_proof(this.ptr,s)}set evals0(a){_assertClass(a,WasmPastaFpProofEvaluations);var s=a.ptr;a.ptr=0,wasm.wasmpastafpproverproof_set_evals0(this.ptr,s)}set evals1(a){_assertClass(a,WasmPastaFpProofEvaluations);var s=a.ptr;a.ptr=0,wasm.wasmpastafpproverproof_set_evals1(this.ptr,s)}set public_(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafpproverproof_set_public_(this.ptr,s,t)}set prev_challenges_scalars(a){_assertClass(a,WasmVecVecPastaFp);var s=a.ptr;a.ptr=0,wasm.wasmpastafpproverproof_set_prev_challenges_scalars(this.ptr,s)}set prev_challenges_comms(a){var s=passArray32ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafpproverproof_set_prev_challenges_comms(this.ptr,s,t)}}export class WasmPastaFpUrs{static __wrap(a){const s=Object.create(WasmPastaFpUrs.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastafpurs_free(a)}}export class WasmPastaFqOpeningProof{static __wrap(a){const s=Object.create(WasmPastaFqOpeningProof.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastafqopeningproof_free(a)}get z1(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.__wbg_get_wasmpastafqopeningproof_z1(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set z1(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.__wbg_set_wasmpastafqopeningproof_z1(this.ptr,s,t)}get z2(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.__wbg_get_wasmpastafqopeningproof_z2(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set z2(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.__wbg_set_wasmpastafqopeningproof_z2(this.ptr,s,t)}constructor(a,s,t,_,r,e){var o=passArray32ToWasm0(a,wasm.__wbindgen_malloc),m=WASM_VECTOR_LEN,n=passArray32ToWasm0(s,wasm.__wbindgen_malloc),p=WASM_VECTOR_LEN;_assertClass(t,WasmPallasGAffine);var i=t.ptr;t.ptr=0;var l=passArray8ToWasm0(_,wasm.__wbindgen_malloc),w=WASM_VECTOR_LEN,c=passArray8ToWasm0(r,wasm.__wbindgen_malloc),f=WASM_VECTOR_LEN;_assertClass(e,WasmPallasGAffine);var g=e.ptr;e.ptr=0;var d=wasm.wasmpastafqopeningproof_new(o,m,n,p,i,l,w,c,f,g);return WasmPastaFqOpeningProof.__wrap(d)}get lr_0(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafqopeningproof_lr_0(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU32FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,4*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}get lr_1(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafqopeningproof_lr_1(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU32FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,4*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}get delta(){var a=wasm.wasmpastafpopeningproof_delta(this.ptr);return WasmPallasGAffine.__wrap(a)}get sg(){var a=wasm.wasmpastafpopeningproof_sg(this.ptr);return WasmPallasGAffine.__wrap(a)}set lr_0(a){var s=passArray32ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafqopeningproof_set_lr_0(this.ptr,s,t)}set lr_1(a){var s=passArray32ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafqopeningproof_set_lr_1(this.ptr,s,t)}set delta(a){_assertClass(a,WasmPallasGAffine);var s=a.ptr;a.ptr=0,wasm.wasmpastafpopeningproof_set_delta(this.ptr,s)}set sg(a){_assertClass(a,WasmPallasGAffine);var s=a.ptr;a.ptr=0,wasm.wasmpastafpopeningproof_set_sg(this.ptr,s)}}export class WasmPastaFqPlonkDomain{static __wrap(a){const s=Object.create(WasmPastaFqPlonkDomain.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastafqplonkdomain_free(a)}get log_size_of_group(){return wasm.__wbg_get_wasmpastafpplonkdomain_log_size_of_group(this.ptr)}set log_size_of_group(a){wasm.__wbg_set_wasmpastafpplonkdomain_log_size_of_group(this.ptr,a)}get group_gen(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.__wbg_get_wasmpastafqplonkdomain_group_gen(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set group_gen(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.__wbg_set_wasmpastafqplonkdomain_group_gen(this.ptr,s,t)}constructor(a,s){var t=passArray8ToWasm0(s,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,r=wasm.wasmpastafqplonkdomain_new(a,t,_);return WasmPastaFqPlonkDomain.__wrap(r)}}export class WasmPastaFqPlonkGate{static __wrap(a){const s=Object.create(WasmPastaFqPlonkGate.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastafqplonkgate_free(a)}get typ(){return wasm.__wbg_get_wasmpastafqplonkgate_typ(this.ptr)>>>0}set typ(a){wasm.__wbg_set_wasmpastafqplonkgate_typ(this.ptr,a)}get wires(){var a=wasm.__wbg_get_wasmpastafqplonkgate_wires(this.ptr);return WasmPlonkWires.__wrap(a)}set wires(a){_assertClass(a,WasmPlonkWires);var s=a.ptr;a.ptr=0,wasm.__wbg_set_wasmpastafqplonkgate_wires(this.ptr,s)}constructor(a,s,t){_assertClass(s,WasmPlonkWires);var _=s.ptr;s.ptr=0;var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,o=wasm.wasmpastafqplonkgate_new(a,_,r,e);return WasmPastaFqPlonkGate.__wrap(o)}get c(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafqplonkgate_c(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set c(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafqplonkgate_set_c(this.ptr,s,t)}}export class WasmPastaFqPlonkGateVector{static __wrap(a){const s=Object.create(WasmPastaFqPlonkGateVector.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastafqplonkgatevector_free(a)}}export class WasmPastaFqPlonkIndex{static __wrap(a){const s=Object.create(WasmPastaFqPlonkIndex.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastafqplonkindex_free(a)}}export class WasmPastaFqPlonkOracles{static __wrap(a){const s=Object.create(WasmPastaFqPlonkOracles.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastafqplonkoracles_free(a)}get o(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.__wbg_get_wasmpastafqplonkoracles_o(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set o(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.__wbg_set_wasmpastafqplonkoracles_o(this.ptr,s,t)}get p_eval0(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.__wbg_get_wasmpastafqplonkoracles_p_eval0(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set p_eval0(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.__wbg_set_wasmpastafqplonkoracles_p_eval0(this.ptr,s,t)}get p_eval1(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.__wbg_get_wasmpastafqplonkoracles_p_eval1(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set p_eval1(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.__wbg_set_wasmpastafqplonkoracles_p_eval1(this.ptr,s,t)}get digest_before_evaluations(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.__wbg_get_wasmpastafqplonkoracles_digest_before_evaluations(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set digest_before_evaluations(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.__wbg_set_wasmpastafqplonkoracles_digest_before_evaluations(this.ptr,s,t)}constructor(a,s,t,_,r){var e=passArray8ToWasm0(a,wasm.__wbindgen_malloc),o=WASM_VECTOR_LEN,m=passArray8ToWasm0(s,wasm.__wbindgen_malloc),n=WASM_VECTOR_LEN,p=passArray8ToWasm0(t,wasm.__wbindgen_malloc),i=WASM_VECTOR_LEN,l=passArray8ToWasm0(_,wasm.__wbindgen_malloc),w=WASM_VECTOR_LEN,c=passArray8ToWasm0(r,wasm.__wbindgen_malloc),f=WASM_VECTOR_LEN,g=wasm.wasmpastafqplonkoracles_new(e,o,m,n,p,i,l,w,c,f);return WasmPastaFqPlonkOracles.__wrap(g)}get opening_prechallenges(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafqplonkoracles_opening_prechallenges(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set opening_prechallenges(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafqplonkoracles_set_opening_prechallenges(this.ptr,s,t)}}export class WasmPastaFqPlonkVerificationEvals{static __wrap(a){const s=Object.create(WasmPastaFqPlonkVerificationEvals.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastafqplonkverificationevals_free(a)}get sigma_comm0(){var a=wasm.wasmpastafpplonkverificationevals_sigma_comm0(this.ptr);return WasmPastaPallasPolyComm.__wrap(a)}get sigma_comm1(){var a=wasm.wasmpastafpplonkverificationevals_sigma_comm1(this.ptr);return WasmPastaPallasPolyComm.__wrap(a)}get sigma_comm2(){var a=wasm.wasmpastafpplonkverificationevals_sigma_comm2(this.ptr);return WasmPastaPallasPolyComm.__wrap(a)}get ql_comm(){var a=wasm.wasmpastafpplonkverificationevals_ql_comm(this.ptr);return WasmPastaPallasPolyComm.__wrap(a)}get qr_comm(){var a=wasm.wasmpastafpplonkverificationevals_qr_comm(this.ptr);return WasmPastaPallasPolyComm.__wrap(a)}get qo_comm(){var a=wasm.wasmpastafpplonkverificationevals_qo_comm(this.ptr);return WasmPastaPallasPolyComm.__wrap(a)}get qm_comm(){var a=wasm.wasmpastafpplonkverificationevals_qm_comm(this.ptr);return WasmPastaPallasPolyComm.__wrap(a)}get qc_comm(){var a=wasm.wasmpastafpplonkverificationevals_qc_comm(this.ptr);return WasmPastaPallasPolyComm.__wrap(a)}get rcm_comm0(){var a=wasm.wasmpastafpplonkverificationevals_rcm_comm0(this.ptr);return WasmPastaPallasPolyComm.__wrap(a)}get rcm_comm1(){var a=wasm.wasmpastafpplonkverificationevals_rcm_comm1(this.ptr);return WasmPastaPallasPolyComm.__wrap(a)}get rcm_comm2(){var a=wasm.wasmpastafpplonkverificationevals_rcm_comm2(this.ptr);return WasmPastaPallasPolyComm.__wrap(a)}get psm_comm(){var a=wasm.wasmpastafpplonkverificationevals_psm_comm(this.ptr);return WasmPastaPallasPolyComm.__wrap(a)}get add_comm(){var a=wasm.wasmpastafpplonkverificationevals_add_comm(this.ptr);return WasmPastaPallasPolyComm.__wrap(a)}get mul1_comm(){var a=wasm.wasmpastafpplonkverificationevals_mul1_comm(this.ptr);return WasmPastaPallasPolyComm.__wrap(a)}get mul2_comm(){var a=wasm.wasmpastafpplonkverificationevals_mul2_comm(this.ptr);return WasmPastaPallasPolyComm.__wrap(a)}get emul1_comm(){var a=wasm.wasmpastafpplonkverificationevals_emul1_comm(this.ptr);return WasmPastaPallasPolyComm.__wrap(a)}get emul2_comm(){var a=wasm.wasmpastafpplonkverificationevals_emul2_comm(this.ptr);return WasmPastaPallasPolyComm.__wrap(a)}get emul3_comm(){var a=wasm.wasmpastafpplonkverificationevals_emul3_comm(this.ptr);return WasmPastaPallasPolyComm.__wrap(a)}set sigma_comm0(a){_assertClass(a,WasmPastaPallasPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_sigma_comm0(this.ptr,s)}set sigma_comm1(a){_assertClass(a,WasmPastaPallasPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_sigma_comm1(this.ptr,s)}set sigma_comm2(a){_assertClass(a,WasmPastaPallasPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_sigma_comm2(this.ptr,s)}set ql_comm(a){_assertClass(a,WasmPastaPallasPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_ql_comm(this.ptr,s)}set qr_comm(a){_assertClass(a,WasmPastaPallasPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_qr_comm(this.ptr,s)}set qo_comm(a){_assertClass(a,WasmPastaPallasPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_qo_comm(this.ptr,s)}set qm_comm(a){_assertClass(a,WasmPastaPallasPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_qm_comm(this.ptr,s)}set qc_comm(a){_assertClass(a,WasmPastaPallasPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_qc_comm(this.ptr,s)}set rcm_comm0(a){_assertClass(a,WasmPastaPallasPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_rcm_comm0(this.ptr,s)}set rcm_comm1(a){_assertClass(a,WasmPastaPallasPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_rcm_comm1(this.ptr,s)}set rcm_comm2(a){_assertClass(a,WasmPastaPallasPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_rcm_comm2(this.ptr,s)}set psm_comm(a){_assertClass(a,WasmPastaPallasPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_psm_comm(this.ptr,s)}set add_comm(a){_assertClass(a,WasmPastaPallasPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_add_comm(this.ptr,s)}set mul1_comm(a){_assertClass(a,WasmPastaPallasPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_mul1_comm(this.ptr,s)}set mul2_comm(a){_assertClass(a,WasmPastaPallasPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_mul2_comm(this.ptr,s)}set emul1_comm(a){_assertClass(a,WasmPastaPallasPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_emul1_comm(this.ptr,s)}set emul2_comm(a){_assertClass(a,WasmPastaPallasPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_emul2_comm(this.ptr,s)}set emul3_comm(a){_assertClass(a,WasmPastaPallasPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverificationevals_set_emul3_comm(this.ptr,s)}constructor(a,s,t,_,r,e,o,m,n,p,i,l,w,c,f,g,d,y){_assertClass(a,WasmPastaPallasPolyComm),_assertClass(s,WasmPastaPallasPolyComm),_assertClass(t,WasmPastaPallasPolyComm),_assertClass(_,WasmPastaPallasPolyComm),_assertClass(r,WasmPastaPallasPolyComm),_assertClass(e,WasmPastaPallasPolyComm),_assertClass(o,WasmPastaPallasPolyComm),_assertClass(m,WasmPastaPallasPolyComm),_assertClass(n,WasmPastaPallasPolyComm),_assertClass(p,WasmPastaPallasPolyComm),_assertClass(i,WasmPastaPallasPolyComm),_assertClass(l,WasmPastaPallasPolyComm),_assertClass(w,WasmPastaPallasPolyComm),_assertClass(c,WasmPastaPallasPolyComm),_assertClass(f,WasmPastaPallasPolyComm),_assertClass(g,WasmPastaPallasPolyComm),_assertClass(d,WasmPastaPallasPolyComm),_assertClass(y,WasmPastaPallasPolyComm);var v=wasm.wasmpastafpplonkverificationevals_new(a.ptr,s.ptr,t.ptr,_.ptr,r.ptr,e.ptr,o.ptr,m.ptr,n.ptr,p.ptr,i.ptr,l.ptr,w.ptr,c.ptr,f.ptr,g.ptr,d.ptr,y.ptr);return WasmPastaFqPlonkVerificationEvals.__wrap(v)}}export class WasmPastaFqPlonkVerificationShifts{static __wrap(a){const s=Object.create(WasmPastaFqPlonkVerificationShifts.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastafqplonkverificationshifts_free(a)}get r(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.__wbg_get_wasmpastafqplonkdomain_group_gen(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set r(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.__wbg_set_wasmpastafqplonkdomain_group_gen(this.ptr,s,t)}get o(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.__wbg_get_wasmpastafqplonkverificationshifts_o(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set o(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.__wbg_set_wasmpastafqplonkverificationshifts_o(this.ptr,s,t)}constructor(a,s){var t=passArray8ToWasm0(a,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,r=passArray8ToWasm0(s,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,o=wasm.wasmpastafqplonkverificationshifts_new(t,_,r,e);return WasmPastaFqPlonkVerificationShifts.__wrap(o)}}export class WasmPastaFqPlonkVerifierIndex{static __wrap(a){const s=Object.create(WasmPastaFqPlonkVerifierIndex.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastafqplonkverifierindex_free(a)}get domain(){var a=wasm.__wbg_get_wasmpastafpplonkverifierindex_domain(this.ptr);return WasmPastaFqPlonkDomain.__wrap(a)}set domain(a){_assertClass(a,WasmPastaFqPlonkDomain);var s=a.ptr;a.ptr=0,wasm.__wbg_set_wasmpastafpplonkverifierindex_domain(this.ptr,s)}get max_poly_size(){return wasm.__wbg_get_wasmpastafpplonkverifierindex_max_poly_size(this.ptr)}set max_poly_size(a){wasm.__wbg_set_wasmpastafpplonkverifierindex_max_poly_size(this.ptr,a)}get max_quot_size(){return wasm.__wbg_get_wasmpastafpplonkverifierindex_max_quot_size(this.ptr)}set max_quot_size(a){wasm.__wbg_set_wasmpastafpplonkverifierindex_max_quot_size(this.ptr,a)}get shifts(){var a=wasm.__wbg_get_wasmpastafpplonkverifierindex_shifts(this.ptr);return WasmPastaFqPlonkVerificationShifts.__wrap(a)}set shifts(a){_assertClass(a,WasmPastaFqPlonkVerificationShifts);var s=a.ptr;a.ptr=0,wasm.__wbg_set_wasmpastafpplonkverifierindex_shifts(this.ptr,s)}constructor(a,s,t,_,r,e){_assertClass(a,WasmPastaFqPlonkDomain),_assertClass(_,WasmPastaFqUrs),_assertClass(r,WasmPastaFqPlonkVerificationEvals),_assertClass(e,WasmPastaFqPlonkVerificationShifts);var o=wasm.wasmpastafqplonkverifierindex_new(a.ptr,s,t,_.ptr,r.ptr,e.ptr);return WasmPastaFqPlonkVerifierIndex.__wrap(o)}get urs(){var a=wasm.wasmpastafpplonkverifierindex_urs(this.ptr);return WasmPastaFqUrs.__wrap(a)}set urs(a){_assertClass(a,WasmPastaFqUrs);var s=a.ptr;a.ptr=0,wasm.wasmpastafpplonkverifierindex_set_urs(this.ptr,s)}get evals(){var a=wasm.wasmpastafqplonkverifierindex_evals(this.ptr);return WasmPastaFqPlonkVerificationEvals.__wrap(a)}set evals(a){_assertClass(a,WasmPastaFqPlonkVerificationEvals);var s=a.ptr;a.ptr=0,wasm.wasmpastafqplonkverifierindex_set_evals(this.ptr,s)}}export class WasmPastaFqProofEvaluations{static __wrap(a){const s=Object.create(WasmPastaFqProofEvaluations.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastafqproofevaluations_free(a)}constructor(a,s,t,_,r,e,o,m){var n=passArray8ToWasm0(a,wasm.__wbindgen_malloc),p=WASM_VECTOR_LEN,i=passArray8ToWasm0(s,wasm.__wbindgen_malloc),l=WASM_VECTOR_LEN,w=passArray8ToWasm0(t,wasm.__wbindgen_malloc),c=WASM_VECTOR_LEN,f=passArray8ToWasm0(_,wasm.__wbindgen_malloc),g=WASM_VECTOR_LEN,d=passArray8ToWasm0(r,wasm.__wbindgen_malloc),y=WASM_VECTOR_LEN,v=passArray8ToWasm0(e,wasm.__wbindgen_malloc),W=WASM_VECTOR_LEN,u=passArray8ToWasm0(o,wasm.__wbindgen_malloc),b=WASM_VECTOR_LEN,P=passArray8ToWasm0(m,wasm.__wbindgen_malloc),k=WASM_VECTOR_LEN,C=wasm.wasmpastafqproofevaluations_new(n,p,i,l,w,c,f,g,d,y,v,W,u,b,P,k);return WasmPastaFqProofEvaluations.__wrap(C)}get l(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafqproofevaluations_l(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}get r(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafqproofevaluations_r(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}get o(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafqproofevaluations_o(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}get z(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafqproofevaluations_z(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}get t(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafqproofevaluations_t(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}get f(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafqproofevaluations_f(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}get sigma1(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafqproofevaluations_sigma1(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}get sigma2(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafqproofevaluations_sigma2(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set l(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafqproofevaluations_set_l(this.ptr,s,t)}set r(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafqproofevaluations_set_r(this.ptr,s,t)}set o(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafqproofevaluations_set_o(this.ptr,s,t)}set z(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafqproofevaluations_set_z(this.ptr,s,t)}set t(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafqproofevaluations_set_t(this.ptr,s,t)}set f(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafqproofevaluations_set_f(this.ptr,s,t)}set sigma1(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafqproofevaluations_set_sigma1(this.ptr,s,t)}set sigma2(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafqproofevaluations_set_sigma2(this.ptr,s,t)}}export class WasmPastaFqProverCommitments{static __wrap(a){const s=Object.create(WasmPastaFqProverCommitments.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastafqprovercommitments_free(a)}constructor(a,s,t,_,r){_assertClass(a,WasmPastaPallasPolyComm);var e=a.ptr;a.ptr=0,_assertClass(s,WasmPastaPallasPolyComm);var o=s.ptr;s.ptr=0,_assertClass(t,WasmPastaPallasPolyComm);var m=t.ptr;t.ptr=0,_assertClass(_,WasmPastaPallasPolyComm);var n=_.ptr;_.ptr=0,_assertClass(r,WasmPastaPallasPolyComm);var p=r.ptr;r.ptr=0;var i=wasm.wasmpastafpprovercommitments_new(e,o,m,n,p);return WasmPastaFqProverCommitments.__wrap(i)}get l_comm(){var a=wasm.wasmpastafpprovercommitments_l_comm(this.ptr);return WasmPastaPallasPolyComm.__wrap(a)}get r_comm(){var a=wasm.wasmpastafpprovercommitments_r_comm(this.ptr);return WasmPastaPallasPolyComm.__wrap(a)}get o_comm(){var a=wasm.wasmpastafpprovercommitments_o_comm(this.ptr);return WasmPastaPallasPolyComm.__wrap(a)}get z_comm(){var a=wasm.wasmpastafpprovercommitments_z_comm(this.ptr);return WasmPastaPallasPolyComm.__wrap(a)}get t_comm(){var a=wasm.wasmpastafpprovercommitments_t_comm(this.ptr);return WasmPastaPallasPolyComm.__wrap(a)}set l_comm(a){_assertClass(a,WasmPastaPallasPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpprovercommitments_set_l_comm(this.ptr,s)}set r_comm(a){_assertClass(a,WasmPastaPallasPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpprovercommitments_set_r_comm(this.ptr,s)}set o_comm(a){_assertClass(a,WasmPastaPallasPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpprovercommitments_set_o_comm(this.ptr,s)}set z_comm(a){_assertClass(a,WasmPastaPallasPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpprovercommitments_set_z_comm(this.ptr,s)}set t_comm(a){_assertClass(a,WasmPastaPallasPolyComm);var s=a.ptr;a.ptr=0,wasm.wasmpastafpprovercommitments_set_t_comm(this.ptr,s)}}export class WasmPastaFqProverProof{static __wrap(a){const s=Object.create(WasmPastaFqProverProof.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastafqproverproof_free(a)}constructor(a,s,t,_,r,e,o){_assertClass(a,WasmPastaFqProverCommitments);var m=a.ptr;a.ptr=0,_assertClass(s,WasmPastaFqOpeningProof);var n=s.ptr;s.ptr=0,_assertClass(t,WasmPastaFqProofEvaluations);var p=t.ptr;t.ptr=0,_assertClass(_,WasmPastaFqProofEvaluations);var i=_.ptr;_.ptr=0;var l=passArray8ToWasm0(r,wasm.__wbindgen_malloc),w=WASM_VECTOR_LEN;_assertClass(e,WasmVecVecPastaFq);var c=e.ptr;e.ptr=0;var f=passArray32ToWasm0(o,wasm.__wbindgen_malloc),g=WASM_VECTOR_LEN,d=wasm.wasmpastafqproverproof_new(m,n,p,i,l,w,c,f,g);return WasmPastaFqProverProof.__wrap(d)}get commitments(){var a=wasm.wasmpastafpproverproof_commitments(this.ptr);return WasmPastaFqProverCommitments.__wrap(a)}get proof(){var a=wasm.wasmpastafpproverproof_proof(this.ptr);return WasmPastaFqOpeningProof.__wrap(a)}get evals0(){var a=wasm.wasmpastafpproverproof_evals0(this.ptr);return WasmPastaFqProofEvaluations.__wrap(a)}get evals1(){var a=wasm.wasmpastafpproverproof_evals1(this.ptr);return WasmPastaFqProofEvaluations.__wrap(a)}get public_(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafqproverproof_public_(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}get prev_challenges_scalars(){var a=wasm.wasmpastafqproverproof_prev_challenges_scalars(this.ptr);return WasmVecVecPastaFq.__wrap(a)}get prev_challenges_comms(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastafqproverproof_prev_challenges_comms(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU32FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,4*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set commitments(a){_assertClass(a,WasmPastaFqProverCommitments);var s=a.ptr;a.ptr=0,wasm.wasmpastafpproverproof_set_commitments(this.ptr,s)}set proof(a){_assertClass(a,WasmPastaFqOpeningProof);var s=a.ptr;a.ptr=0,wasm.wasmpastafpproverproof_set_proof(this.ptr,s)}set evals0(a){_assertClass(a,WasmPastaFqProofEvaluations);var s=a.ptr;a.ptr=0,wasm.wasmpastafpproverproof_set_evals0(this.ptr,s)}set evals1(a){_assertClass(a,WasmPastaFqProofEvaluations);var s=a.ptr;a.ptr=0,wasm.wasmpastafpproverproof_set_evals1(this.ptr,s)}set public_(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafqproverproof_set_public_(this.ptr,s,t)}set prev_challenges_scalars(a){_assertClass(a,WasmVecVecPastaFq);var s=a.ptr;a.ptr=0,wasm.wasmpastafpproverproof_set_prev_challenges_scalars(this.ptr,s)}set prev_challenges_comms(a){var s=passArray32ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastafqproverproof_set_prev_challenges_comms(this.ptr,s,t)}}export class WasmPastaFqUrs{static __wrap(a){const s=Object.create(WasmPastaFqUrs.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastafqurs_free(a)}}export class WasmPastaPallasPolyComm{static __wrap(a){const s=Object.create(WasmPastaPallasPolyComm.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastapallaspolycomm_free(a)}get shifted(){var a=wasm.__wbg_get_wasmpastapallaspolycomm_shifted(this.ptr);return 0===a?void 0:WasmPallasGAffine.__wrap(a)}set shifted(a){let s=0;isLikeNone(a)||(_assertClass(a,WasmPallasGAffine),s=a.ptr,a.ptr=0),wasm.__wbg_set_wasmpastapallaspolycomm_shifted(this.ptr,s)}constructor(a,s){var t=passArray32ToWasm0(a,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN;let r=0;isLikeNone(s)||(_assertClass(s,WasmPallasGAffine),r=s.ptr,s.ptr=0);var e=wasm.wasmpastapallaspolycomm_new(t,_,r);return WasmPastaPallasPolyComm.__wrap(e)}get unshifted(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastapallaspolycomm_unshifted(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU32FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,4*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set unshifted(a){var s=passArray32ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastapallaspolycomm_set_unshifted(this.ptr,s,t)}}export class WasmPastaVestaPolyComm{static __wrap(a){const s=Object.create(WasmPastaVestaPolyComm.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmpastavestapolycomm_free(a)}get shifted(){var a=wasm.__wbg_get_wasmpastapallaspolycomm_shifted(this.ptr);return 0===a?void 0:WasmVestaGAffine.__wrap(a)}set shifted(a){let s=0;isLikeNone(a)||(_assertClass(a,WasmVestaGAffine),s=a.ptr,a.ptr=0),wasm.__wbg_set_wasmpastapallaspolycomm_shifted(this.ptr,s)}constructor(a,s){var t=passArray32ToWasm0(a,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN;let r=0;isLikeNone(s)||(_assertClass(s,WasmVestaGAffine),r=s.ptr,s.ptr=0);var e=wasm.wasmpastavestapolycomm_new(t,_,r);return WasmPastaVestaPolyComm.__wrap(e)}get unshifted(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmpastavestapolycomm_unshifted(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU32FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,4*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set unshifted(a){var s=passArray32ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmpastavestapolycomm_set_unshifted(this.ptr,s,t)}}export class WasmPlonkWire{static __wrap(a){const s=Object.create(WasmPlonkWire.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmplonkwire_free(a)}get row(){return wasm.__wbg_get_wasmplonkwire_row(this.ptr)}set row(a){wasm.__wbg_set_wasmplonkwire_row(this.ptr,a)}get col(){return wasm.__wbg_get_wasmplonkwire_col(this.ptr)>>>0}set col(a){wasm.__wbg_set_wasmplonkwire_col(this.ptr,a)}constructor(a,s){var t=wasm.wasmplonkwire_new(a,s);return WasmPlonkWire.__wrap(t)}}export class WasmPlonkWires{static __wrap(a){const s=Object.create(WasmPlonkWires.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmplonkwires_free(a)}get row(){return wasm.__wbg_get_wasmplonkwire_row(this.ptr)}set row(a){wasm.__wbg_set_wasmplonkwire_row(this.ptr,a)}get l(){var a=wasm.__wbg_get_wasmplonkwires_l(this.ptr);return WasmPlonkWire.__wrap(a)}set l(a){_assertClass(a,WasmPlonkWire);var s=a.ptr;a.ptr=0,wasm.__wbg_set_wasmplonkwires_l(this.ptr,s)}get r(){var a=wasm.__wbg_get_wasmplonkwires_r(this.ptr);return WasmPlonkWire.__wrap(a)}set r(a){_assertClass(a,WasmPlonkWire);var s=a.ptr;a.ptr=0,wasm.__wbg_set_wasmplonkwires_r(this.ptr,s)}get o(){var a=wasm.__wbg_get_wasmplonkwires_o(this.ptr);return WasmPlonkWire.__wrap(a)}set o(a){_assertClass(a,WasmPlonkWire);var s=a.ptr;a.ptr=0,wasm.__wbg_set_wasmplonkwires_o(this.ptr,s)}constructor(a,s,t,_){_assertClass(s,WasmPlonkWire);var r=s.ptr;s.ptr=0,_assertClass(t,WasmPlonkWire);var e=t.ptr;t.ptr=0,_assertClass(_,WasmPlonkWire);var o=_.ptr;_.ptr=0;var m=wasm.wasmplonkwires_new(a,r,e,o);return WasmPlonkWires.__wrap(m)}}export class WasmVecVecPallasPolyComm{static __wrap(a){const s=Object.create(WasmVecVecPallasPolyComm.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmvecvecpallaspolycomm_free(a)}constructor(a){var s=wasm.wasmvecvecpallaspolycomm_create(a);return WasmVecVecPallasPolyComm.__wrap(s)}push(a){var s=passArray32ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmvecvecpallaspolycomm_push(this.ptr,s,t)}}export class WasmVecVecPastaFp{static __wrap(a){const s=Object.create(WasmVecVecPastaFp.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmvecvecpastafp_free(a)}constructor(a){var s=wasm.wasmvecvecpallaspolycomm_create(a);return WasmVecVecPastaFp.__wrap(s)}push(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmvecvecpastafp_push(this.ptr,s,t)}get(a){try{const r=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmvecvecpastafp_get(r,this.ptr,a);var s=getInt32Memory0()[r/4+0],t=getInt32Memory0()[r/4+1],_=getArrayU8FromWasm0(s,t).slice();return wasm.__wbindgen_free(s,1*t),_}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set(a,s){var t=passArray8ToWasm0(s,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN;wasm.wasmvecvecpastafp_set(this.ptr,a,t,_)}}export class WasmVecVecPastaFq{static __wrap(a){const s=Object.create(WasmVecVecPastaFq.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmvecvecpastafq_free(a)}constructor(a){var s=wasm.wasmvecvecpallaspolycomm_create(a);return WasmVecVecPastaFq.__wrap(s)}push(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmvecvecpastafq_push(this.ptr,s,t)}get(a){try{const r=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.wasmvecvecpastafq_get(r,this.ptr,a);var s=getInt32Memory0()[r/4+0],t=getInt32Memory0()[r/4+1],_=getArrayU8FromWasm0(s,t).slice();return wasm.__wbindgen_free(s,1*t),_}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set(a,s){var t=passArray8ToWasm0(s,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN;wasm.wasmvecvecpastafq_set(this.ptr,a,t,_)}}export class WasmVecVecVestaPolyComm{static __wrap(a){const s=Object.create(WasmVecVecVestaPolyComm.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmvecvecvestapolycomm_free(a)}constructor(a){var s=wasm.wasmvecvecpallaspolycomm_create(a);return WasmVecVecVestaPolyComm.__wrap(s)}push(a){var s=passArray32ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.wasmvecvecvestapolycomm_push(this.ptr,s,t)}}export class WasmVestaGAffine{static __wrap(a){const s=Object.create(WasmVestaGAffine.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmvestagaffine_free(a)}get x(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.__wbg_get_wasmvestagaffine_x(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set x(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.__wbg_set_wasmvestagaffine_x(this.ptr,s,t)}get y(){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.__wbg_get_wasmvestagaffine_y(_,this.ptr);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1],t=getArrayU8FromWasm0(a,s).slice();return wasm.__wbindgen_free(a,1*s),t}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set y(a){var s=passArray8ToWasm0(a,wasm.__wbindgen_malloc),t=WASM_VECTOR_LEN;wasm.__wbg_set_wasmvestagaffine_y(this.ptr,s,t)}get infinity(){return 0!==wasm.__wbg_get_wasmpallasgaffine_infinity(this.ptr)}set infinity(a){wasm.__wbg_set_wasmpallasgaffine_infinity(this.ptr,a)}}export class WasmVestaGProjective{static __wrap(a){const s=Object.create(WasmVestaGProjective.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wasmvestagprojective_free(a)}}export class wbg_rayon_PoolBuilder{static __wrap(a){const s=Object.create(wbg_rayon_PoolBuilder.prototype);return s.ptr=a,s}__destroy_into_raw(){const a=this.ptr;return this.ptr=0,a}free(){const a=this.__destroy_into_raw();wasm.__wbg_wbg_rayon_poolbuilder_free(a)}mainJS(){return takeObject(wasm.wbg_rayon_poolbuilder_mainJS(this.ptr))}numThreads(){return wasm.wbg_rayon_poolbuilder_numThreads(this.ptr)>>>0}receiver(){return wasm.wbg_rayon_poolbuilder_receiver(this.ptr)}build(){wasm.wbg_rayon_poolbuilder_build(this.ptr)}}async function load(a,s){if("function"==typeof Response&&a instanceof Response){if("function"==typeof WebAssembly.instantiateStreaming)try{return await WebAssembly.instantiateStreaming(a,s)}catch(s){if("application/wasm"==a.headers.get("Content-Type"))throw s;console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",s)}const t=await a.arrayBuffer();return await WebAssembly.instantiate(t,s)}{const t=await WebAssembly.instantiate(a,s);return t instanceof WebAssembly.Instance?{instance:t,module:a}:t}}async function init(a,s){void 0===a&&(a=new URL("plonk_wasm_bg.wasm",import.meta.url));const t={wbg:{}};t.wbg.__wbindgen_string_new=function(a,s){return addHeapObject(getStringFromWasm0(a,s))},t.wbg.__wbg_alert_b014848fc9035c81=function(a,s){alert(getStringFromWasm0(a,s))},t.wbg.__wbg_log_19fef73d9a645b72=function(a,s){console.log(getStringFromWasm0(a,s))},t.wbg.__wbg_self_86b4b13392c7af56=function(){return handleError((function(){return addHeapObject(self.self)}),arguments)},t.wbg.__wbindgen_object_drop_ref=function(a){takeObject(a)},t.wbg.__wbg_require_f5521a5b85ad2542=function(a,s,t){return addHeapObject(getObject(a).require(getStringFromWasm0(s,t)))},t.wbg.__wbg_crypto_b8c92eaac23d0d80=function(a){return addHeapObject(getObject(a).crypto)},t.wbg.__wbg_msCrypto_9ad6677321a08dd8=function(a){return addHeapObject(getObject(a).msCrypto)},t.wbg.__wbindgen_is_undefined=function(a){return void 0===getObject(a)},t.wbg.__wbg_getRandomValues_dd27e6b0652b3236=function(a){return addHeapObject(getObject(a).getRandomValues)},t.wbg.__wbg_getRandomValues_e57c9b75ddead065=function(a,s){getObject(a).getRandomValues(getObject(s))},t.wbg.__wbg_randomFillSync_d2ba53160aec6aba=function(a,s,t){getObject(a).randomFillSync(getArrayU8FromWasm0(s,t))},t.wbg.__wbg_static_accessor_MODULE_452b4680e8614c81=function(){return addHeapObject(r)},t.wbg.__wbindgen_object_clone_ref=function(a){return addHeapObject(getObject(a))},t.wbg.__wbg_buffer_397eaa4d72ee94dd=function(a){return addHeapObject(getObject(a).buffer)},t.wbg.__wbg_new_a7ce447f15ff496f=function(a){return addHeapObject(new Uint8Array(getObject(a)))},t.wbg.__wbg_set_969ad0a60e51d320=function(a,s,t){getObject(a).set(getObject(s),t>>>0)},t.wbg.__wbg_length_1eb8fc608a0d4cdb=function(a){return getObject(a).length},t.wbg.__wbg_newwithlength_929232475839a482=function(a){return addHeapObject(new Uint8Array(a>>>0))},t.wbg.__wbg_subarray_8b658422a224f479=function(a,s,t){return addHeapObject(getObject(a).subarray(s>>>0,t>>>0))},t.wbg.__wbindgen_throw=function(a,s){throw new Error(getStringFromWasm0(a,s))},t.wbg.__wbindgen_rethrow=function(a){throw takeObject(a)},t.wbg.__wbindgen_module=function(){return addHeapObject(init.__wbindgen_wasm_module)},t.wbg.__wbindgen_memory=function(){return addHeapObject(wasm.memory)},t.wbg.__wbg_static_accessor_URL_b24f10c24510da94=function(){return addHeapObject(import.meta.url)},t.wbg.__wbg_startWorkers_3e6644f7fc0ac450=function(a,s,t){return addHeapObject(startWorkers(takeObject(a),takeObject(s),wbg_rayon_PoolBuilder.__wrap(t)))},("string"==typeof a||"function"==typeof Request&&a instanceof Request||"function"==typeof URL&&a instanceof URL)&&(a=fetch(a)),t.wbg.memory=s||new WebAssembly.Memory({initial:18,maximum:16384,shared:!0});const{instance:_,module:r}=await load(await a,t);return wasm=_.exports,init.__wbindgen_wasm_module=r,wasm.__wbindgen_start(),wasm}export default init;