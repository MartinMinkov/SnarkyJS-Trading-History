export const worker_spec=function(a){var r={there:function(a){return a?2:1},back:function(a){return 1!==a}};return{caml_pasta_fp_plonk_index_create:{args:[a.WasmPastaFpPlonkGateVector,void 0,a.WasmPastaFpUrs],res:a.WasmPastaFpPlonkIndex},caml_pasta_fq_plonk_index_create:{args:[a.WasmPastaFqPlonkGateVector,void 0,a.WasmPastaFqUrs],res:a.WasmPastaFqPlonkIndex},caml_pasta_fp_plonk_verifier_index_create:{args:[a.WasmPastaFpPlonkIndex],res:a.WasmPastaFpPlonkVerifierIndex},caml_pasta_fq_plonk_verifier_index_create:{args:[a.WasmPastaFqPlonkIndex],res:a.WasmPastaFqPlonkVerifierIndex},caml_pasta_fp_plonk_proof_create:{args:[a.WasmPastaFpPlonkIndex,void 0,void 0,void 0,void 0],res:a.WasmPastaFpProverProof},caml_pasta_fq_plonk_proof_create:{args:[a.WasmPastaFqPlonkIndex,void 0,void 0,void 0,void 0],res:a.WasmPastaFqProverProof},caml_pasta_fp_plonk_proof_verify:{args:[void 0,a.WasmPastaFpPlonkVerifierIndex,a.WasmPastaFpProverProof],res:r},caml_pasta_fq_plonk_proof_verify:{args:[void 0,a.WasmPastaFqPlonkVerifierIndex,a.WasmPastaFqProverProof],res:r}}};export const override_bindings=function(a,r){var e=worker_spec(a),o={};for(var s in a)o[s]=a[s];for(var s in e)o[s]=function(o){return function(){var s=a.create_zero_u32_ptr(),n=Array.prototype.slice.apply(arguments);r.postMessage({type:"run",name:o,args:n,u32_ptr:s});var t=a.wait_until_non_zero(s);a.free_u32_ptr(s);var _=e[o].res;return _&&_.__wrap?e[o].res.__wrap(t):_&&_.back?_.back(t):t}}(s);return o};