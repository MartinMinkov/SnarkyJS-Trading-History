function waitForMsgType(e,r){return new Promise((t=>{e.addEventListener("message",(function a({data:n}){null!=n&&n.type===r&&(e.removeEventListener("message",a),t(n))}))}))}let _workers;waitForMsgType(self,"wasm_bindgen_worker_init").then((async e=>{const r=await import(e.mainJS);await r.default(e.module,e.memory),postMessage({type:"wasm_bindgen_worker_ready"}),r.wbg_rayon_start_worker(e.receiver)}));export async function startWorkers(e,r,t){const a={type:"wasm_bindgen_worker_init",module:e,memory:r,receiver:t.receiver(),mainJS:t.mainJS()};_workers=await Promise.all(Array.from({length:t.numThreads()},(async()=>{let e=await fetch(import.meta.url).then((e=>e.blob())),r=URL.createObjectURL(e);const t=new Worker(r,{type:"module"});return t.postMessage(a),await waitForMsgType(t,"wasm_bindgen_worker_ready"),URL.revokeObjectURL(r),t}))),t.build()}